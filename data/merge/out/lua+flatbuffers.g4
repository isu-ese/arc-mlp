gen_0: chunk | schema;
chunk: gen_1 gen_52 EOF;
stat: ';' | gen_3 | functioncall | label | 'break' | gen_85 | gen_86 | gen_87 | gen_88 | gen_89 | gen_94 | gen_97 | gen_98 | gen_101 | gen_102;
retstat: 'return' gen_53 gen_56;
label: '::' gen_5 gen_6 '::';
explist: exp gen_54;
exp: 'nil' | 'false' | 'true' | INT | HEX | gen_14 | gen_18 | gen_19 | gen_20 | gen_23 | gen_24 | NORMALSTRING | CHARSTRING | LONGSTRING | '...' | functiondef | prefixexp | tableconstructor | gen_67 | gen_68 | gen_69 | gen_70 | gen_71 | gen_72 | gen_73 | gen_74 | gen_75;
prefixexp: varOrExp gen_59;
functioncall: varOrExp gen_61 args gen_59;
varOrExp: var | gen_82;
var: gen_4 gen_57;
args: gen_63 | tableconstructor | NORMALSTRING | CHARSTRING | LONGSTRING;
functiondef: 'function' '(' gen_46 ')' gen_1 gen_52 'end';
tableconstructor: '{' gen_64 '}';
fieldlist: field gen_76 gen_78;
field: gen_65 | gen_66 | 'nil' | 'false' | 'true' | INT | HEX | gen_14 | gen_18 | gen_19 | gen_20 | gen_23 | gen_24 | NORMALSTRING | CHARSTRING | LONGSTRING | '...' | functiondef | prefixexp | tableconstructor | gen_67 | gen_68 | gen_69 | gen_70 | gen_71 | gen_72 | gen_73 | gen_74 | gen_75;
fieldsep: ',' | ';';
operatorComparison: '<' | '>' | '<=' | '>=' | '~=' | '==';
operatorAddSub: '+' | '-';
operatorMulDivMod: '*' | '/' | '%' | '//';
operatorBitwise: '&' | '|' | '~' | '<<' | '>>';
operatorUnary: 'not' | '#' | '-' | '~';
NAME_IDENT: gen_5 gen_6;
NORMALSTRING: '\"' gen_25 '\"';
CHARSTRING: '\'' gen_37 '\'';
LONGSTRING: '[' NESTED_STR ']';
NESTED_STR: gen_42 | gen_43;
INT: '0' .. '9' gen_10;
HEX: '0' gen_11 HexDigit gen_12;
ExponentPart: gen_16 gen_17 '0' .. '9' gen_10;
HexExponentPart: gen_22 gen_17 '0' .. '9' gen_10;
HexEscape: '\\' 'x' HexDigit HexDigit;
UtfEscape: '\\' 'u{' HexDigit gen_12 '}';
HexDigit: '0' .. '9' | 'a' .. 'f' | 'A' .. 'F';
schema: gen_105 gen_111;
namespace_decl: 'namespace' gen_5 gen_6 gen_99 ';';
attribute_decl: 'attribute' '\"' gen_107 '\"' ';';
type_decl: gen_114 gen_5 gen_6 metadata '{' gen_122 '}';
enum_decl: gen_127 metadata '{' gen_5 gen_6 gen_99 gen_132 gen_134 gen_136 '}';
root_decl: 'root_type' gen_5 gen_6 ';';
rpc_decl: 'rpc_service' gen_5 gen_6 '{' gen_5 gen_6 '(' gen_5 gen_6 ')' ':' gen_5 gen_6 metadata ';' gen_137 '}';
type: gen_124 | 'bool' | 'byte' | 'ubyte' | 'short' | 'ushort' | 'int' | 'uint' | 'float' | 'long' | 'ulong' | 'double' | 'int8' | 'uint8' | 'int16' | 'uint16' | 'int32' | 'uint32' | 'int64' | 'uint64' | 'float32' | 'float64' | 'string' | ns_ident;
metadata: gen_115 | ϵ;
scalar: gen_118 | 'true' | 'false' | FLOAT_CONSTANT | NAME_IDENT;
object: '{' gen_5 gen_6 ':' value gen_142 gen_136 '}';
single_value: gen_118 | 'true' | 'false' | FLOAT_CONSTANT | NAME_IDENT | STRING_CONSTANT;
value: gen_118 | 'true' | 'false' | FLOAT_CONSTANT | NAME_IDENT | STRING_CONSTANT | object | gen_139;
file_extension_decl: 'file_extension' '\"' gen_107 '\"';
file_identifier_decl: 'file_identifier' '\"' gen_107 '\"';
ns_ident: gen_5 gen_6 gen_99;
STRING_CONSTANT: '\"' gen_107 '\"';
INTEGER_CONSTANT: gen_118 | 'true' | 'false';
FLOAT_CONSTANT: gen_119 '0' .. '9' gen_10 '.' '0' .. '9' gen_10 gen_15;
gen_1: gen_2 | ϵ;
gen_52: retstat | ϵ;
gen_3: gen_4 gen_57 gen_83 '=' exp gen_54;
gen_85: 'goto' gen_5 gen_6;
gen_86: 'do' gen_1 gen_52 'end';
gen_87: 'while' exp 'do' gen_1 gen_52 'end';
gen_88: 'repeat' gen_1 gen_52 'until' exp;
gen_90: gen_91 | ϵ;
gen_93: 'else' gen_1 gen_52;
gen_92: gen_93 | ϵ;
gen_89: 'if' exp 'then' gen_1 gen_52 gen_90 gen_92 'end';
gen_96: ',' exp;
gen_95: gen_96 | ϵ;
gen_94: 'for' gen_5 gen_6 '=' exp ',' exp gen_95 'do' gen_1 gen_52 'end';
gen_97: 'for' gen_5 gen_6 gen_48 'in' exp gen_54 'do' gen_1 gen_52 'end';
gen_98: 'function' gen_5 gen_6 gen_99 gen_61 '(' gen_46 ')' gen_1 gen_52 'end';
gen_101: 'local' 'function' gen_5 gen_6 '(' gen_46 ')' gen_1 gen_52 'end';
gen_104: '=' exp gen_54;
gen_103: gen_104 | ϵ;
gen_102: 'local' gen_5 gen_6 gen_48 gen_103;
gen_53: explist | ϵ;
gen_56: ';' | ϵ;
gen_81: '.' gen_5 gen_6;
gen_99: gen_100 | ϵ;
gen_62: ':' gen_5 gen_6;
gen_61: gen_62 | ϵ;
gen_83: gen_84 | ϵ;
gen_48: gen_49 | ϵ;
gen_54: gen_55 | ϵ;
gen_67: exp '^' exp;
gen_68: operatorUnary exp;
gen_69: exp operatorMulDivMod exp;
gen_70: exp operatorAddSub exp;
gen_71: exp '..' exp;
gen_72: exp operatorComparison exp;
gen_73: exp 'and' exp;
gen_74: exp 'or' exp;
gen_75: exp operatorBitwise exp;
gen_59: gen_60 | ϵ;
gen_82: '(' exp ')';
gen_9: '(' exp ')' gen_59 gen_79;
gen_4: NAME_IDENT | gen_9;
gen_57: gen_58 | ϵ;
gen_80: '[' exp ']';
gen_79: gen_80 | gen_81;
gen_63: '(' gen_53 ')';
gen_46: gen_47 | '...' | ϵ;
gen_51: ',' '...';
gen_50: gen_51 | ϵ;
gen_47: gen_5 gen_6 gen_48 gen_50;
gen_64: fieldlist | ϵ;
gen_76: gen_77 | ϵ;
gen_78: ',' | ';' | ϵ;
gen_65: '[' exp ']' '=' exp;
gen_66: gen_5 gen_6 '=' exp;
gen_5: 'a' .. 'z' | 'A' .. 'Z' | '_';
gen_8: 'a' .. 'z' | 'A' .. 'Z' | '0' .. '9' | '_';
gen_6: gen_7 | ϵ;
gen_36: '\\' | '\"';
gen_35: ~gen_36;
gen_27: gen_28 | gen_30 | gen_32 | gen_33 | gen_34 | HexEscape | UtfEscape | gen_35;
gen_25: gen_26 | ϵ;
gen_41: '\'' | '\\';
gen_40: ~gen_41;
gen_39: gen_28 | gen_30 | gen_32 | gen_33 | gen_34 | HexEscape | UtfEscape | gen_40;
gen_37: gen_38 | ϵ;
gen_42: '=' NESTED_STR '=';
gen_44: gen_45 | ϵ;
gen_43: '[' gen_44 ']';
gen_10: INT | ϵ;
gen_11: 'x' | 'X';
gen_12: gen_13 | ϵ;
gen_15: ExponentPart | ϵ;
gen_14: '0' .. '9' gen_10 '.' gen_10 gen_15;
gen_18: '.' '0' .. '9' gen_10 gen_15;
gen_19: '0' .. '9' gen_10 gen_16 gen_17 '0' .. '9' gen_10;
gen_21: HexExponentPart | ϵ;
gen_20: '0' gen_11 HexDigit gen_12 '.' gen_12 gen_21;
gen_23: '0' gen_11 '.' HexDigit gen_12 gen_21;
gen_24: '0' gen_11 HexDigit gen_12 gen_22 gen_17 '0' .. '9' gen_10;
gen_16: 'e' | 'E';
gen_17: '+' | '-' | ϵ;
gen_22: 'p' | 'P';
gen_29: 'a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | 'z' | '\"' | '\'' | '\\';
gen_28: '\\' gen_29;
gen_31: '\r' | ϵ;
gen_30: '\\' gen_31 '\n';
gen_32: '\\' '0' .. '9';
gen_33: '\\' '0' .. '9' '0' .. '9';
gen_34: '\\' '0' .. '2' '0' .. '9' '0' .. '9';
gen_105: gen_106 | ϵ;
gen_113: namespace_decl | type_decl | enum_decl | root_decl | file_extension_decl | file_identifier_decl | attribute_decl | rpc_decl | object;
gen_111: gen_112 | ϵ;
gen_114: 'table' | 'struct';
gen_122: gen_123 | ϵ;
gen_130: ':' type;
gen_129: gen_130 | ϵ;
gen_128: 'enum' gen_5 gen_6 gen_129;
gen_131: 'union' gen_5 gen_6;
gen_127: gen_128 | gen_131;
gen_126: '=' scalar;
gen_125: gen_126 | ϵ;
gen_137: gen_138 | ϵ;
gen_124: '[' type ']';
gen_133: '=' INTEGER_CONSTANT;
gen_132: gen_133 | ϵ;
gen_134: gen_135 | ϵ;
gen_136: ',' | ϵ;
gen_117: ':' single_value;
gen_116: gen_117 | ϵ;
gen_120: gen_121 | ϵ;
gen_115: '(' gen_5 gen_6 gen_116 gen_120 ')';
gen_142: gen_143 | ϵ;
gen_139: '[' value gen_140 gen_136 ']';
gen_140: gen_141 | ϵ;
gen_110: '\"' | '\r' | '\n';
gen_109: ~gen_110;
gen_107: gen_108 | ϵ;
gen_119: '-' | ϵ;
gen_118: gen_119 '0' .. '9' gen_10;
gen_2: stat gen_1;
gen_91: 'elseif' exp 'then' gen_1 gen_52 gen_90;
gen_100: '.' gen_5 gen_6 gen_99;
gen_84: ',' gen_4 gen_57 gen_83;
gen_49: ',' gen_5 gen_6 gen_48;
gen_55: ',' exp gen_54;
gen_60: gen_61 args gen_59;
gen_58: gen_59 gen_79 gen_57;
gen_77: fieldsep field gen_76;
gen_7: gen_8 gen_6;
gen_26: gen_27 gen_25;
gen_38: gen_39 gen_37;
gen_45: . gen_44;
gen_13: HexDigit gen_12;
gen_106: 'include' '\"' gen_107 '\"' ';' gen_105;
gen_112: gen_113 gen_111;
gen_123: gen_5 gen_6 ':' type gen_125 metadata ';' gen_122;
gen_138: gen_5 gen_6 '(' gen_5 gen_6 ')' ':' gen_5 gen_6 metadata ';' gen_137;
gen_135: ',' gen_5 gen_6 gen_99 gen_132 gen_134;
gen_121: ',' gen_5 gen_6 gen_116 gen_120;
gen_143: ',' gen_5 gen_6 ':' value gen_142;
gen_141: ',' value gen_140;
gen_108: gen_109 gen_107