hundreds_tens_hun_part_hun_rep: gen_0 | 'M' | 'C' | 'CC' | 'CCC' | 'CD' | 'D' | 'CM' | gen_1 | 'X' | 'XX' | 'XXX' | 'XL' | 'L' | 'XC' | 'I' | 'II' | 'III' | 'IV' | 'V' | gen_3 | 'IX' | chunk;
tens_part_tens_rep: 'X' | 'XX' | 'XXX' | 'XL' | 'L' | gen_1 | 'XC';
ones_ones_rep: 'I' | 'II' | 'III' | 'IV' | 'V' | gen_3 | 'IX' | ϵ;
chunk: gen_4 gen_5 varOrExp gen_4;
retstat: gen_24 varOrExp fieldsep;
label_NAME: gen_37 gen_36 args gen_37;
explist_fieldlist_var: fieldsep exp_field varOrExp;
exp_field: 'nil' | 'false' | 'true' | INT_HexExponentPart_ExponentPart | HEX | NORMALSTRING | CHARSTRING | LONGSTRING | '...' | functiondef | prefixexp_functioncall | tableconstructor | gen_43 | gen_45 | gen_33 | gen_47 | gen_48 | ϵ | retstat | explist_fieldlist_var | gen_30 | gen_31;
prefixexp_functioncall: varOrExp gen_26 gen_29;
varOrExp: ϵ | explist_fieldlist_var | gen_28 | retstat | gen_30;
args: gen_28 | tableconstructor | NORMALSTRING | CHARSTRING | LONGSTRING | label_NAME | chunk | ϵ | 'end';
functiondef: fieldsep gen_36 args gen_14 gen_35 gen_5 varOrExp args;
tableconstructor: '{' varOrExp '}';
fieldsep: ϵ | ',' | ';' | '=' | 'local';
operatorAddSub: '+' | '-' | ϵ;
NORMALSTRING: '\"' gen_19 '\"';
CHARSTRING: '\'' gen_19 '\'';
LONGSTRING: '[' exp_field ']' gen_32;
NESTED_STR: gen_47 | LONGSTRING | gen_48 | ϵ;
INT_HexExponentPart_ExponentPart: gen_8 '0' .. '9' gen_17 gen_19;
HEX: '0' gen_42 gen_8 HexDigit gen_11 gen_13 gen_8 gen_19;
HexEscape: '\\' 'x' HexDigit HexDigit;
UtfEscape: gen_14 HexDigit gen_13 gen_17;
HexDigit: '0' .. '9' | 'a' .. 'f' | 'A' .. 'F';
gen_0: hundreds_tens_hun_part_hun_rep hundreds_tens_hun_part_hun_rep;
gen_1: gen_2 tens_part_tens_rep ones_ones_rep;
gen_3: 'V' ones_ones_rep;
gen_5: gen_6 | ϵ | gen_53;
gen_49: gen_50 'do' gen_5 varOrExp 'end';
gen_52: 'repeat' gen_5 varOrExp 'until' exp_field;
gen_53: gen_54 exp_field 'then' gen_5 varOrExp gen_5 gen_26;
gen_35: functiondef | ϵ | '...';
gen_43: exp_field gen_44 exp_field;
gen_45: gen_46 exp_field;
gen_29: prefixexp_functioncall | ϵ | gen_31;
gen_28: '(' exp_field ')' gen_29;
gen_30: ',' '...';
gen_33: args '=' exp_field fieldsep;
gen_36: 'a' .. 'z' | 'A' .. 'Z' | '_' | '0' .. '9' | 'function';
gen_39: '\\' | '\"' | '\'';
gen_38: ~gen_39;
gen_19: gen_20 | ϵ | INT_HexExponentPart_ExponentPart;
gen_47: '=' NESTED_STR '=';
gen_42: 'x' | 'X';
gen_13: UtfEscape | ϵ | '\r';
gen_41: 'e' | 'E';
gen_10: 'p' | 'P';
gen_15: '\\' gen_16;
gen_22: '\\' gen_13 '\n';
gen_23: '\\' gen_24 '0' .. '9';
gen_6: gen_7 gen_5;
gen_31: gen_29 args gen_29 varOrExp;
gen_20: gen_21 gen_19 gen_8;
gen_48: . NESTED_STR;
gen_27: args args;
gen_26: ϵ | '0' .. '2' | gen_27;
gen_34: gen_35 'in';
gen_32: gen_33 | gen_34 | ϵ;
gen_12: gen_13 '.';
gen_54: 'if' | 'elseif';
gen_4: ϵ | 'else' | EOF;
gen_9: gen_10 operatorAddSub gen_11;
gen_8: ϵ | gen_9 | gen_40 | '.';
gen_11: ϵ | gen_12 | '0' .. '9';
gen_44: '^' | '*' | '/' | '%' | '//' | '+' | '-' | ϵ | '..' | '<' | '>' | '<=' | '>=' | '~=' | '==' | 'and' | 'or' | '&' | '|' | '~' | '<<' | '>>';
gen_25: gen_26 '0' .. '9';
gen_24: ϵ | gen_25 | 'return';
gen_14: '(' | ϵ | gen_15;
gen_17: '}' | ϵ | gen_18;
gen_51: 'for' gen_36 args gen_32 exp_field varOrExp;
gen_50: ϵ | gen_45 | gen_51;
gen_37: '::' | ϵ | 'goto' | ':' | gen_27 | '.' | label_NAME;
gen_40: gen_19 gen_41 operatorAddSub;
gen_18: gen_19 gen_19;
gen_2: ϵ | 'L';
gen_46: 'not' | '#' | '-' | '~' | 'while';
gen_16: 'a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | 'z' | '\"' | '\'' | '\\' | 'u{';
gen_7: ';' | explist_fieldlist_var | prefixexp_functioncall | label_NAME | 'break' | gen_49 | gen_52 | gen_53 | functiondef | ')';
gen_21: gen_15 | gen_22 | gen_23 | HexEscape | UtfEscape | gen_38 | ϵ