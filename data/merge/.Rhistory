f1 <- aov(formula = data$deltaHAL ~ data$sizeF + data$stF)
summary(f1)
f2 <- lm(data$deltaHAL ~ data$sizeF + data$stF)
summary(f2)
par(mfrow=c(2,2))
plot(f1)
View(data)
# Levene's Test for HOV
leveneTest(data$deltaHAL, data$sizeF)
# Normality Tests
ad.test(x = data$deltaHAL)
shapiro.test(x = data$deltaHAL)
# Friedman Test
friedman.test(data$deltaHAL ~ data$sizeF | data$stF)
# Friedman Test
friedman.test(data$deltaHAL ~ data$sizeF + data$stF)
# Friedman Test
friedman.test(data$deltaHAL,data$sizeF,data$stF)
# Friedman Test
friedman.test(data$deltaHAL,data$sizeF)
# Friedman Test
friedman.test(data$deltaHAL,data$sizeF,data$stF)
View(data)
# Size Analysis
ss.2way(a = 3, b = 5, alpha = 0.05, beta = 0.05, f.A = 10000 , f.B = 10000 , delta.A = 1000, delta.B = 1000, sigma.A =65000 , sigma.B = 84000, B = 1000)
# Size Analysis
ss.2way(a = 3, b = 5, alpha = 0.01, beta = 0.01, f.A = 10000 , f.B = 10000 , delta.A = 1000, delta.B = 1000, sigma.A =65000 , sigma.B = 84000, B = 1000)
# Anova Analysis
rep0 <- subset(data, (data$repetition = 0))
# Anova Analysis
rep0 <- subset(data, (data$repetition == 0))
rep1 <- subset(data, (data$repetition == 0))
# Friedman Test
friedman.test(rep0$deltaHAL,rep0$sizeF,rep0$stF)
friedman.test(rep1$deltaHAL,rep1$sizeF,rep1$stF)
friedman.test(rep1$deltaHAL,rep1$sizeF,rep1$stF)
f1 <- aov(formula = rep0$deltaHAL ~ rep0$sizeF + rep0$stF)
summary(f1)
rep1 <- subset(data, (data$repetition == 1))
friedman.test(rep1$deltaHAL,rep1$sizeF,rep1$stF)
# Friedman Test
friedman.test(rep0$deltaHAL,rep0$sizeF,rep0$stF)
friedman.test(rep1$deltaHAL,rep1$sizeF,rep1$stF)
f1 <- aov(formula = rep1$deltaHAL ~ rep1$sizeF + rep1$stF)
summary(f1)
f2 <- lm(data$deltaHAL ~ data$sizeF + data$stF)
summary(f2)
# Size Analysis
ss.2way(a = 3, b = 5, alpha = 0.05, beta = 0.05, f.A = 10000 , f.B = 10000 , delta.A = 1000, delta.B = 1000, sigma.A =65000 , sigma.B = 84000, B = 1000)
# Size Analysis
ss.2way(a = 3, b = 5, alpha = 0.05, beta = 0.05, f.A = 10 , f.B = 10 , delta.A = 1000, delta.B = 1000, sigma.A =65000 , sigma.B = 84000, B = 1000)
# Size Analysis
ss.2way(a = 3, b = 5, alpha = 0.05, beta = 0.05, f.A = 10 , f.B = 10 , delta.A = 10, delta.B = 10, sigma.A =65000 , sigma.B = 84000, B = 1000)
f1 <- aov(formula = data$deltaHAL ~ data$sizeF + data$stF)
summary(f1)
summary(f2)
library(car) # for levene's
library(asd) # for dunnett's
library(ggpubr) # for nice graphs
library(nortest) # for anderson-darling test
library(PMCMRplus) # for steel test
library(pwr2) # power and sample size analysis
# read in data
setwd("/home/git/isuese/papers/arc-mlp/analysis/")
data <- read.csv2(file = "experiments-result-1.csv", header = T, sep = ",", as.is = T, quote = "\"")
# Anova Analysis
rep0 <- subset(data, (data$repetition == 0))
rep1 <- subset(data, (data$repetition == 1))
summary(data)
data['sizeF'] <- as.factor(data$size)
data['stF'] <- as.factor(data$similarity_threshold)
data['nHal'] <- as.numeric(data$full.MCC)
data['deltaHAL'] = as.numeric(data$trivial.MCC) - as.numeric(data$full.MCC)
f1 <- aov(formula = data$deltaMCC ~ data$sizeF + data$stF)
summary(f1)
f2 <- lm(data$deltaMCC ~ data$sizeF + data$stF)
summary(f2)
data['deltaMCC'] = as.numeric(data$trivial.MCC) - as.numeric(data$full.MCC)
f1 <- aov(formula = data$deltaMCC ~ data$sizeF + data$stF)
summary(f1)
f2 <- lm(data$deltaMCC ~ data$sizeF + data$stF)
summary(f2)
f2 <- lm(data$deltaMCC ~ data$stF)
f1 <- aov(formula = data$deltaMCC ~ data$stF)
summary(f1)
f2 <- lm(data$deltaMCC ~ data$stF)
summary(f2)
f2 <- lm(data$deltaMCC ~ data$trivial.TERM + data$stF)
summary(f2)
f2 <- lm(data$deltaMCC ~ data$nterm + data$stF)
summary(f2)
data['nterm']
View(data)
View(data)
as.numeric(data$full.TERM)
data['nterm'] <- as.numeric(data$full.TERM)
data['nterm']
f2 <- lm(data$deltaMCC ~ data$nterm + data$stF)
summary(f2)
boxplot(data$trivial.TERM ~ data$sizeF)
boxplot(data$nterm ~ data$sizeF)
))
boxplot(data$nt
par(mfrow=c(1,1))
boxplot(data$nterm ~ data$sizeF)
par(mfrow=c(1,1))
boxplot(data$nterm ~ data$sizeF)
boxplot(data$nterm ~ data$sizeF)
View(data)
View(data)
f1 <- Anova(data$deltaMCC ~ data$stF,type=3)
f2 <- lm(data$deltaMCC ~ data$nterm + data$stF)
f1 <- Anova(f2,type=3)
summary(f1)
summary(f2)
f2 <- lm(data$deltaMCC ~ data$sizeF + data$stF)
f1 <- Anova(f2,type=3)
# Size Analysis
ss.2way(a = 3, b = 5, alpha = 0.05, beta = 0.05, f.A = NULL , f.B = NULL , delta.A = 10, delta.B = 10, sigma.A =1000 , sigma.B = 1500, B = 1000)
# Size Analysis
ss.2way(a = 3, b = 5, alpha = 0.05, beta = 0.05, f.A = NULL , f.B = NULL , delta.A = 10, delta.B = 10, sigma.A =1000 , sigma.B = 1500, B = 100)
# Size Analysis
ss.2way(a = 3, b = 5, alpha = 0.05, beta = 0.05, f.A = NULL , f.B = NULL , delta.A = 10, delta.B = 10, sigma.A =1000 , sigma.B = 1500, B = 10)
# Size Analysis
ss.2way(a = 3, b = 5, alpha = 0.05, beta = 0.05, f.A = NULL , f.B = NULL , delta.A = 10, delta.B = 10, sigma.A =1000 , sigma.B = 1500, B = 9)
# Size Analysis
ss.2way(a = 3, b = 5, alpha = 0.05, beta = 0.05, f.A = NULL , f.B = NULL , delta.A = 10, delta.B = 10, sigma.A =1000 , sigma.B = 1500, B = 4)
w=c(2,2))
plot(f1)
par(mfrow=c(2,2))
plot(f1)
par(mfrow=c(2,2))
qqplot(f1)
f1 <- Anova(f2,type=3)
summary(f1)
par(mfrow=c(2,2))
qqplot(f2)
qqplot(aov(data$deltaMCC ~ data$sizeF + data$stF))
qqplot(aov(data$deltaMCC ~ data$sizeF + data$stF))
data['sizeF'] <- as.factor(data$size)
data['stF'] <- as.factor(data$similarity_threshold)
data['nHal'] <- as.numeric(data$full.MCC)
data['deltaMCC'] = as.numeric(data$trivial.MCC) - as.numeric(data$full.MCC)
data['nterm'] <- as.numeric(data$full.TERM)
as.numeric(data$full.TERM)
qqplot(aov(data$deltaMCC ~ data$sizeF + data$stF))
plot(aov(data$deltaMCC ~ data$sizeF + data$stF))
boxCox(data$detlaMCC)
boxCox(data$deltaMCC)
boxCox(f2)
boxCox(f1)
boxCox(aov(data$deltaMCC ~ data$sizeF + data$stF))
boxCoxVariable(data$deltaMCC)
knitr::opts_chunk$set(echo = TRUE)
# imports
library(car) # for levene's
library(asd) # for dunnett's
library(ggpubr) # for nice graphs
library(nortest) # for anderson-darling test
library(PMCMRplus) # for steel test
library(pwr2) # power and sample size analysis
library(MASS) # boxcox procedure
library(lmPerm) # for permutation f-test
# read in data
setwd("/home/git/isuese/papers/arc-mlp/analysis/")
data <- read.csv2(file = "experiments-1-result.csv", header = T, sep = ",", as.is = T, quote = "\"")
y <- dataHal$deltaHAL
knitr::opts_chunk$set(echo = TRUE)
# imports
library(car) # for levene's
library(asd) # for dunnett's
library(ggpubr) # for nice graphs
library(nortest) # for anderson-darling test
library(PMCMRplus) # for steel test
library(pwr2) # power and sample size analysis
library(MASS) # boxcox procedure
library(lmPerm) # for permutation f-test
# read in data
setwd("/home/git/isuese/papers/arc-mlp/analysis/")
data <- read.csv2(file = "experiments-1-result.csv", header = T, sep = ",", as.is = T, quote = "\"")
# Separate Data out for MCC and HAL
dataHal <- subset(data, (data$dependent_variable == "HAL"))
dataMCC <- subset(data, (data$dependent_variable == "MCC"))
dataHal['sizeF'] <- as.factor(dataHal$size)
dataHal['stF'] <- as.factor(dataHal$similarity_threshold)
dataHal['nHal'] <- as.numeric(dataHal$full.HAL)
dataHal['deltaHAL'] = as.numeric(dataHal$trivial.HAL) - as.numeric(dataHal$full.HAL)
y <- dataHal$deltaHAL
treatment <- dataHal$stF
block <- dataHal$sizeF
levels(treatment) <- c("1.0", "0.001", "0.25", "0.5", "0.75")
rcbd <- data.frame(y, block, treatment) # data-frame
summary(subset(dataHal$deltaHAL, (dataHal$sizeF == "small")))
summary(subset(dataHal$deltaHAL, (dataHal$sizeF == "medium")))
summary(subset(dataHal$deltaHAL, (dataHal$sizeF == "large")))
pairs.panels(rcbd,ellipse=F)
library(psych) # for scatterplot matrix
install.packages("psych")
library(psych) # for scatterplot matrix
pairs.panels(rcbd,ellipse=F)
f1 <- aov(formula = dataHal$deltaHAL ~ dataHal$sizeF * dataHal$stF)
summary(f1)
f2 <- lm(dataHal$deltaHAL ~ dataHal$sizeF * dataHal$stF)
summary(f2)
par(mfrow=c(2,2))
qqPlot(f1)
qqPlot(f1)
plot(f1)
par(mfrow=c(2,2))
plot(f1)
with(dataHal, (interaction.plot(stF, sizeF, deltaHAL, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta HAL")))
leveneTest(dataHal$deltaHAL, dataHal$sizeF)
```{r, echo=FALSE}
ad.test(x = dataHal$deltaHAL)
shapiro.test(x = dataHal$deltaHAL)
ggboxplot(data, x = "sizeF", y = "nHal", color = "stF",
palette = c("red", "green", "blue", "orange", "cyan"))
ggboxplot(dataHal, x = "sizeF", y = "nHal", color = "stF",
palette = c("red", "green", "blue", "orange", "cyan"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = c("red", "green", "blue", "orange", "cyan"))
summary(aov(y~treatment*block, rcbd)) # parametric test for rcbd
summary(aovp(y~treatment*block, rcbd)) # permutation test for rcbd
install.packages("RColorBrewer")
install.packages("wesanderson")
knitr::opts_chunk$set(echo = TRUE)
# imports
library(car) # for levene's
library(asd) # for dunnett's
library(ggpubr) # for nice graphs
library(nortest) # for anderson-darling test
library(PMCMRplus) # for steel test
library(pwr2) # power and sample size analysis
library(MASS) # boxcox procedure
library(lmPerm) # for permutation f-test
library(psych) # for scatterplot matrix
library(RColorBrewer) # for better colors
library(wesanderson) # for better colors
# read in data
setwd("/home/git/isuese/papers/arc-mlp/analysis/")
data <- read.csv2(file = "experiments-1-result.csv", header = T, sep = ",", as.is = T, quote = "\"")
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes.palette(n=5, name="Moonrise1"))
library(RColorBrewer) # for better colors
library(wesanderson) # for better colors
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes.palette(n=5, name="Moonrise1"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes.palette(n=5, name="Moonrise1"))
library(wesanderson) # for better colors
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes.palette(n=5, name="Moonrise1"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="Moonrise1"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="Moonrise3"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = brewer.palette(n=5, name="Spectral"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = brewer.pal(n=5, name="Spectral"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = brewer.pal(n=5, name="PuOr"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = heat.colors(5))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="FantasticFox"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="Zissou"))
wes_palettes
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="IsleOfDogs2"))
wes_palettes
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="IsleofDogs2"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="IsleofDogs1"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="IsleofDogs2"))
wes_palettes
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="FantasticFox2"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="FantasticFox1"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="FantasticFox1"))
wes_palettes
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="BottleRocket1"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="BottleRocket2"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="BottleRocket1"))
wes_palettes
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="Zissou1"))
with(dataHal, (interaction.plot(stF, sizeF, deltaHAL, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta HAL"), col = wes_palette(3, name = "Moonrise 2")))
with(dataHal, (interaction.plot(stF, sizeF, deltaHAL, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta HAL", col = wes_palette(3, name = "Moonrise 2")))
with(dataHal, (interaction.plot(stF, sizeF, deltaHAL, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta HAL", col = wes_palette(3, name = "Moonrise 2"))))
with(dataHal, (interaction.plot(stF, sizeF, deltaHAL, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta HAL", col = wes_palette(3, name = "Moonrise 2"))))
with(dataHal, (interaction.plot(stF, sizeF, deltaHAL, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta HAL", col = wes_palette(3, name = "Moonrise2"))))
with(dataHal, (interaction.plot(stF, sizeF, deltaHAL, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta HAL", col = wes_palette(3, name = "Moonrise1"))))
with(dataHal, (interaction.plot(stF, sizeF, deltaHAL, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta HAL", col = wes_palette(3, name = "GrandBudapest"))))
with(dataHal, (interaction.plot(stF, sizeF, deltaHAL, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta HAL", col = wes_palette(3, name = "GrandBudapest1"))))
hist(dataHal$deltaHAL, col="green", main="Histogram of Delta HAL", xlab="Delta HAL")
with(dataHal, (interaction.plot(stF, sizeF, deltaHAL, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta HAL", col = wes_palette(3, name = "Chevalier1"))))
with(dataHal, (interaction.plot(stF, sizeF, deltaHAL, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta HAL", col = wes_palette(3, name = "Zissou1"))))
hist(dataHal$deltaHAL, col=wes_palette(1, name="Zissou1"), main="Histogram of Delta HAL", xlab="Delta HAL")
hist(dataHal$deltaHAL, col=wes_palette(1, name="Moonrise3"), main="Histogram of Delta HAL", xlab="Delta HAL")
hist(dataHal$deltaHAL, col=wes_palette(1, name="Moonrise3"), main="Histogram of Delta HAL", xlab="Delta HAL")
hist(dataMCC$deltaMCC, col=wes_palette(1, name="Moonrise3"), main="Histogram of Delta MCC", xlab="Delta MCC")
dataMCC['sizeF'] <- as.factor(dataHal$size)
dataMCC['stF'] <- as.factor(dataHal$similarity_threshold)
dataMCC['deltaMCC'] = as.numeric(dataHal$trivial.HAL) - as.numeric(dataHal$full.HAL)
y <- dataMCC$deltaMCC
treatment <- dataMCC$stF
block <- dataMCC$sizeF
levels(treatment) <- c("1.0", "0.001", "0.25", "0.5", "0.75")
rcbd2 <- data.frame(y, block, treatment) # data-frame
hist(dataMCC$deltaMCC, col=wes_palette(1, name="Moonrise3"), main="Histogram of Delta MCC", xlab="Delta MCC")
hist(dataHal$deltaHAL, col=wes_palette(1, name="Moonrise3"), main="Histogram of Delta HAL", xlab="Delta HAL")
hist(dataMCC$deltaMCC, col=wes_palette(1, name="Moonrise3"), main="Histogram of Delta MCC", xlab="Delta MCC")
dataMCC['sizeF'] <- as.factor(dataHal$size)
dataMCC['stF'] <- as.factor(dataHal$similarity_threshold)
dataMCC['deltaMCC'] = as.numeric(dataMCC$trivial.MCC) - as.numeric(dataMCC$full.MCC)
y <- dataMCC$deltaMCC
treatment <- dataMCC$stF
block <- dataMCC$sizeF
levels(treatment) <- c("1.0", "0.001", "0.25", "0.5", "0.75")
rcbd2 <- data.frame(y, block, treatment) # data-frame
hist(dataHal$deltaHAL, col=wes_palette(1, name="Moonrise3"), main="Histogram of Delta HAL", xlab="Delta HAL")
hist(dataMCC$deltaMCC, col=wes_palette(1, name="Moonrise3"), main="Histogram of Delta MCC", xlab="Delta MCC")
levels(treatment)
steelTest(y~treatment, data=rcbd, alternative="greater")
steelTest(y~treatment*block, data=rcbd, alternative="greater")
steelTest(y~treatment, data=rcbd, alternative="greater")
install.packages("clinfun")
library(clinfun) # for Jonchheere-Terpstra Test
jonckheere.test(rcbd$y, rcbd$treatment, alternative = "increasing", nperm=1000)
rcbd$treatment <- ordered(rcbd$treatment)
jonckheere.test(rcbd$y, rcbd$treatment, alternative = "increasing", nperm=1000)
jonckheere.test(rcbd$y, rcbd$treatment, alternative = "decreasing", nperm=1000)
levels(rcbd$treatment)
jonckheere.test(rcbd$y, rcbd$treatment, alternative = "decreasing", nperm=10000)
jonckheere.test(rcbd$y, rcbd$treatment, alternative = "two.sided", nperm=10000)
jonckheere.test(rcbd$y, rcbd$treatment, alternative = "decreasing", nperm=10000)
jonckheere.test(rcbd$y, rcbd$treatment, alternative = "increasing", nperm=10000)
levels(rcbd$treatment) <- c("0.001", "0.25", "0.5", "0.75", "1.0")
rcbd$treatment <- ordered(rcbd$treatment)
jonckheere.test(rcbd$y, rcbd$treatment, alternative = "increasing", nperm=10000)
f1 <- aov(formula = dataMCC$deltaMCC ~ dataMCC$sizeF * dataMCC$stF)
summary(f1)
f2 <- lm(dataMCC$deltaMCC ~ dataMCC$sizeF * dataMCC$stF)
summary(f2)
par(mfrow=c(2,2))
plot(f1)
with(dataMCC, (interaction.plot(stF, sizeF, deltaMCC, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta HAL", col = wes_palette(3, name = "Zissou1"))))
leveneTest(dataMCC$deltaMCC, dataMCC$sizeF)
ad.test(x = dataMCC$deltaMCC)
shapiro.test(x = dataMCC$deltaMCC)
summary(aov(y~treatment*block, rcbd)) # parametric test for rcbd
summary(aovp(y~treatment*block, rcbd)) # permutation test for rcbd
summary(aov(y~treatment*block, rcbd2)) # parametric test for rcbd
summary(aovp(y~treatment*block, rcbd2)) # permutation test for rcbd
steelTest(y~treatment, data=rcbd, alternative="greater")
steelTest(y~treatment, data=rcbd2, alternative="greater")
levels(rcbd$treatment) <- c("0.001", "0.25", "0.5", "0.75", "1.0")
rcbd$treatment <- ordered(rcbd$treatment)
jonckheere.test(rcbd$y, rcbd$treatment, alternative = "increasing", nperm=10000)
levels(rcbd2$treatment) <- c("0.001", "0.25", "0.5", "0.75", "1.0")
rcbd$treatment <- ordered(rcbd$treatment)
jonckheere.test(rcbd2$y, rcbd2$treatment, alternative = "increasing", nperm=10000)
levels(rcbd2$treatment) <- c("0.001", "0.25", "0.5", "0.75", "1.0")
rcbd2$treatment <- ordered(rcbd2$treatment)
jonckheere.test(rcbd2$y, rcbd2$treatment, alternative = "increasing", nperm=10000)
unlink('/home/git/isuese/papers/arc-mlp/analysis/analysis_cache', recursive = TRUE)
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
# imports
library(car) # for levene's
library(asd) # for dunnett's
library(ggpubr) # for nice graphs
library(nortest) # for anderson-darling test
library(PMCMRplus) # for steel test
library(pwr2) # power and sample size analysis
library(MASS) # boxcox procedure
library(lmPerm) # for permutation f-test
library(psych) # for scatterplot matrix
library(clinfun) # for Jonchheere-Terpstra Test
library(RColorBrewer) # for better colors
library(wesanderson) # for better colors
# read in data
setwd("/home/git/isuese/papers/arc-mlp/analysis/")
data <- read.csv2(file = "experiments-1-result.csv", header = T, sep = ",", as.is = T, quote = "\"")
hist(dataHal$deltaHAL, breaks = 15, col=wes_palette(1, name="Moonrise3"), main="Histogram of Delta HAL", xlab="Delta HAL")
hist(dataMCC$deltaMCC, breaks = 15, col=wes_palette(1, name="Moonrise3"), main="Histogram of Delta MCC", xlab="Delta MCC")
pairs.panels(rcbd,ellipse=F)
pairs.panels(rcbd2,ellipse=F)
ggboxplot(dataMCC, x = "sizeF", y = "deltaMCC", color = "stF",
palette = wes_palette(n=5, name="Zissou1"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="Zissou1"))
ggboxplot(dataMCC, x = "sizeF", y = "deltaMCC", color = "stF",
palette = wes_palette(n=5, name="Zissou1"))
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="Zissou1"),
title = "Box Plots of Size vs DeltaHAL", xlab = "Size",
ylab = "DeltaHAL")
library(car) # for levene's
library(asd) # for dunnett's
library(ggpubr) # for nice graphs
library(nortest) # for anderson-darling test
library(PMCMRplus) # for steel test
library(pwr2) # power and sample size analysis
library(MASS) # boxcox procedure
library(lmPerm) # for permutation f-test
library(psych) # for scatterplot matrix
library(clinfun) # for Jonchheere-Terpstra Test
library(RColorBrewer) # for better colors
library(wesanderson) # for better colors
library(cairoDevice) # for conversion to svg
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="Zissou1"),
title = "Box Plots of Size vs DeltaHAL", xlab = "Size",
ylab = "DeltaHAL")
setwd("/home/git/isuese/papers/arc-mlp/data/merge/")
data <- read.csv2(file = "experiments-1-result.csv", header = T, sep = ",", as.is = T, quote = "\"")
# Separate Data by experiment
# Separate Data out for MCC and HAL
dataHal <- subset(data, (data$dependent_variable == "HAL"))
dataMCC <- subset(data, (data$dependent_variable == "MCC"))
dataHal['sizeF'] <- as.factor(dataHal$size)
dataHal['stF'] <- as.factor(dataHal$similarity_threshold)
dataHal['deltaHAL'] = as.numeric(dataHal$trivial.HAL) - as.numeric(dataHal$full.HAL)
dataMCC['sizeF'] <- as.factor(dataHal$size)
dataMCC['stF'] <- as.factor(dataHal$similarity_threshold)
dataMCC['deltaMCC'] = as.numeric(dataMCC$trivial.MCC) - as.numeric(dataMCC$full.MCC)
y <- dataHal$deltaHAL
treatment <- dataHal$stF
block <- dataHal$sizeF
levels(treatment) <- c("1.0", "0.001", "0.25", "0.5", "0.75")
rcbd <- data.frame(y, block, treatment) # data-frame
y <- dataMCC$deltaMCC
treatment <- dataMCC$stF
block <- dataMCC$sizeF
levels(treatment) <- c("1.0", "0.001", "0.25", "0.5", "0.75")
rcbd2 <- data.frame(y, block, treatment) # data-frame
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="Zissou1"),
title = "Box Plots of Size vs DeltaHAL", xlab = "Size",
ylab = "DeltaHAL")
ggboxplot(dataMCC, x = "sizeF", y = "deltaMCC", color = "stF",
palette = wes_palette(n=5, name="Zissou1"),
title = "Box Plots of Size vs DeltaMCC", xlab = "Size",
ylab = "DeltaMCC")
svg("hal_box.svg")
ggboxplot(dataHal, x = "sizeF", y = "deltaHAL", color = "stF",
palette = wes_palette(n=5, name="Zissou1"),
title = "Box Plots of Size vs DeltaHAL", xlab = "Size",
ylab = "DeltaHAL")
dev.off()
svg("mcc_box.svg")
ggboxplot(dataMCC, x = "sizeF", y = "deltaMCC", color = "stF",
palette = wes_palette(n=5, name="Zissou1"),
title = "Box Plots of Size vs DeltaMCC", xlab = "Size",
ylab = "DeltaMCC")
dev.off()
par(mfrow=c(2,2))
plot(f1)
par(mfrow=c(1,1))
f1 <- aov(formula = dataHal$deltaHAL ~ dataHal$sizeF * dataHal$stF)
summary(f1)
f2 <- lm(dataHal$deltaHAL ~ dataHal$sizeF * dataHal$stF)
summary(f2)
par(mfrow=c(2,2))
plot(f1)
par(mfrow=c(1,1))
svg("ex1qqplots.svg")
par(mfrow=c(2,2))
plot(f1)
par(mfrow=c(1,1))
dev.off()
svg("ex1_qqplots.svg")
par(mfrow=c(2,2))
plot(f1)
par(mfrow=c(1,1))
dev.off()
svg("ex1_interaction.svg")
with(dataHal, (interaction.plot(stF, sizeF, deltaHAL, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta HAL", col = wes_palette(3, name = "Zissou1"))))
dev.off()
with(dataHal, (interaction.plot(stF, sizeF, deltaHAL, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta HAL", col = wes_palette(3, name = "Zissou1"))))
f1 <- aov(formula = dataMCC$deltaMCC ~ dataMCC$sizeF * dataMCC$stF)
summary(f1)
f2 <- lm(dataMCC$deltaMCC ~ dataMCC$sizeF * dataMCC$stF)
summary(f2)
svg("ex2_qqplots.svg")
par(mfrow=c(2,2))
plot(f1)
par(mfrow=c(1,1))
dev.off()
par(mfrow=c(2,2))
plot(f1)
par(mfrow=c(1,1))
with(dataMCC, (interaction.plot(stF, sizeF, deltaMCC, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta MCC", col = wes_palette(3, name = "Zissou1"))))
svg("ex2_interaction.svg")
with(dataMCC, (interaction.plot(stF, sizeF, deltaMCC, type="b", pch = c(18, 24, 22), leg.bty = "o", main="Interaction Plot of Similarity Threshold and Grammar Size", xlab = "Similarity Threshold", ylab = "Delta MCC", col = wes_palette(3, name = "Zissou1"))))
dev.off()
pairs.panels(rcbd,ellipse=F)
hist(dataHal$deltaHAL, breaks = 15, col=wes_palette(1, name="Moonrise3"), main="Histogram of Delta HAL", xlab="Delta HAL")
hist(dataMCC$deltaMCC, breaks = 15, col=wes_palette(1, name="Moonrise3"), main="Histogram of Delta MCC", xlab="Delta MCC")
