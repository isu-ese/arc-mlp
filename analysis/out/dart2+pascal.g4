gen_0: libraryDefinition | partDeclaration | program;
declaredIdentifier: metadata finalConstVarOrType IDENTIFIER_START gen_7;
finalConstVarOrType: gen_31 | gen_33 | 'var' | dtype;
varOrType: 'var' | dtype;
formalParameterPart: gen_19 formalParameterList_0;
functionBody: gen_52 | gen_54;
block: '{' statements '}';
formalParameterList_0: gen_26 | gen_27 | gen_38 | gen_51;
optionalFormalParameters: optionalPositionalFormalParameters | namedFormalParameters;
optionalPositionalFormalParameters: '[' normalFormalParameter gen_41 gen_43 gen_45 ']';
namedFormalParameters: '{' defaultNamedParameter gen_49 gen_45 '}';
normalFormalParameter: functionFormalParameter | fieldFormalParameter | declaredIdentifier | gen_35;
functionFormalParameter: metadata gen_28 gen_29 IDENTIFIER_START gen_7 gen_19 formalParameterList_0;
fieldFormalParameter: metadata gen_30 'this' '.' IDENTIFIER_START gen_7 gen_34;
defaultFormalParameter: normalFormalParameter gen_41;
defaultNamedParameter: defaultFormalParameter | gen_46;
mixins: 'with' typeName gen_21 gen_22;
classMemberDefinition: gen_248 | gen_275;
methodSignature: gen_276 | factoryConstructorSignature | gen_278 | gen_279 | gen_280 | operatorSignature;
declaration: gen_249 | gen_257 | gen_258 | gen_259 | gen_260 | gen_264 | gen_265 | gen_267 | gen_268 | gen_272 | gen_273;
operatorSignature: gen_29 'operator' operator formalParameterList_0;
operator: '~' | '*' | '/' | '%' | '~/' | '+' | '-' | '<<' | '>>' | '>>>' | '>=' | '>' | '<=' | '<' | '==' | '&' | '^' | '|' | '[]' | '[]=';
redirection: ':' 'this' gen_9 '(' gen_12 ')';
initializers: ':' initializerListEntry gen_255;
initializerListEntry: gen_251 | gen_252 | fieldInitializer | assertion;
fieldInitializer: gen_253 IDENTIFIER_START gen_7 '=' equalityExpression gen_109 gen_111 gen_113 gen_115 gen_118;
factoryConstructorSignature: 'factory' IDENTIFIER_START gen_7 gen_9 formalParameterList_0;
superclass: 'extends' typeName gen_21;
interfaces: 'implements' typeName gen_21 gen_22;
enumType: metadata 'enum' IDENTIFIER_START gen_7 '{' metadata IDENTIFIER_START gen_7 gen_282 gen_45 '}';
typeParameters: '<' metadata IDENTIFIER_START gen_7 gen_20 gen_24 '>';
metadata: gen_6 | 系;
expression: gen_15 | gen_64 | throwExpression;
expressionWithoutCascade: gen_117 | conditionalExpression | throwExpressionWithoutCascade;
expressionList: expression gen_127;
primary: 'this' | gen_17 | functionExpression | 'null' | 'true' | 'false' | gen_149 | gen_155 | gen_156 | gen_159 | stringLiteral | symbolLiteral | mapLiteral | listLiteral | IDENTIFIER | nayaExpression | constObjectExpression | gen_219;
EXPONENT_0: E gen_154 '0' .. '9' gen_150;
HEX_DIGIT: 'a' .. 'f' | 'A' .. 'F' | '0' .. '9';
stringLiteral: gen_160 gen_208;
StringContentDQ: gen_188 | gen_190;
StringContentSQ: gen_196 | gen_190;
StringContentTDQ: gen_164 | gen_166 | gen_168;
StringContentTSQ: gen_172 | gen_174 | gen_176;
NEWLINE: '\n' | '\r' | '\r\n';
symbolLiteral: '#' gen_209;
listLiteral: gen_212 gen_21 '[' gen_217 ']';
mapLiteral: gen_212 gen_21 '{' gen_213 '}';
throwExpression: 'throw' expression;
throwExpressionWithoutCascade: 'throw' expressionWithoutCascade;
functionExpression: gen_19 formalParameterList_0 functionBody;
nayaExpression: 'new' typeName gen_21 gen_9 '(' gen_12 ')';
constObjectExpression: 'const' typeName gen_21 gen_9 '(' gen_12 ')';
arguments: '(' gen_12 ')';
argumentList: gen_14 | gen_225;
cascadeSelector: gen_18 | IDENTIFIER;
argumentPart: gen_21 '(' gen_12 ')';
assignmentOperator: '=' | '*=' | '/=' | '~/=' | '%=' | '+=' | '<<=' | '>>=' | '>>>=' | '&=' | '^=' | '|=' | '??=';
conditionalExpression: equalityExpression gen_109 gen_111 gen_113 gen_115;
equalityExpression: gen_65 | gen_108;
equalityOperator: '==' | '!=';
relationalExpression: gen_66 | gen_105;
relationalOperator: '>=' | '>' | '<=' | '<';
bitwiseOrExpression: gen_67 | gen_99;
bitwiseXorExpression: gen_68 | gen_96;
bitwiseAndExpression: gen_69 | gen_93;
shiftExpression: gen_70 | gen_90;
shiftOperator: '<<' | '>>' | '>>>';
additiveExpression: gen_71 | gen_87;
additiveOperator_sign: '+' | '-';
multiplicativeExpression: gen_72 | gen_84;
multiplicativeOperator: '*' | '/' | '%' | '~/';
unaryExpression: gen_73 | awaitExpression | gen_74 | gen_75 | gen_79 | gen_81;
prefixOperator: '-' | '!' | '~';
awaitExpression: 'await' unaryExpression;
selector: gen_18 | gen_10 | gen_78 | argumentPart;
incrementOperator: '++' | '--';
assignableExpression: gen_16 | gen_222;
unconditionalAssignableSelector: gen_18 | gen_10;
assignableSelector: gen_18 | gen_10 | gen_78;
qualified: IDENTIFIER_START gen_7 gen_9;
typeTest: 'is' gen_103 typeName gen_21;
typeCast: 'as' typeName gen_21;
statements: gen_56 | 系;
nonLabledStatment: block | localVariableDeclaration | forStatement_0 | whileStatement_0 | doStatement | switchStatement | ifStatement_0 | rethrowStatment | tryStatement | breakStatement | continueStatement | returnStatement | yieldStatement | yieldEachStatement | expressionStatement | assertStatement | localFunctionDeclaration;
expressionStatement: gen_63 ';';
localVariableDeclaration: metadata finalConstVarOrType IDENTIFIER_START gen_7 gen_41 gen_59 ';';
localFunctionDeclaration: metadata gen_29 IDENTIFIER_START gen_7 gen_19 formalParameterList_0 functionBody;
ifStatement_0: 'if' '(' expression ')' gen_57 nonLabledStatment gen_134;
forStatement_0: gen_61 'for' '(' forLoopParts ')' gen_57 nonLabledStatment;
forLoopParts: gen_62 | gen_129 | gen_130;
forInitializerStatement: localVariableDeclaration | expressionStatement;
whileStatement_0: 'while' '(' expression ')' gen_57 nonLabledStatment;
doStatement: 'do' gen_57 nonLabledStatment 'while' '(' expression ')' ';';
switchStatement: 'switch' '(' expression ')' '{' gen_131 gen_133 '}';
defaultCase: gen_57 'default' ':' statements;
rethrowStatment: 'rethrow' ';';
tryStatement: 'try' '{' statements '}' gen_136;
onPart: gen_138 | gen_141;
catchPart: 'catch' '(' IDENTIFIER_START gen_7 gen_139 ')';
finallyPart: 'finally' '{' statements '}';
returnStatement: 'return' gen_63 ';';
breakStatement: 'break' gen_146 ';';
continueStatement: 'continue' gen_146 ';';
yieldStatement: 'yield' expression ';';
yieldEachStatement: 'yield*' expression ';';
assertStatement: 'assert' '(' expression gen_147 gen_45 ')' ';';
assertion: 'assert' '(' expression gen_147 gen_45 ')';
topLevelDefinition: gen_242 | gen_281 | enumType | typeAlias | gen_284 | gen_285 | gen_286 | localFunctionDeclaration | gen_287 | gen_288 | gen_289 | gen_290;
libraryDefinition: gen_1 gen_5 gen_226 gen_238 gen_240;
scriptTag: '#!' gen_2 NEWLINE;
libraryName: metadata 'library' IDENTIFIER_START gen_7 gen_210 ';';
importOrExport: libraryimport | libraryExport;
dottedIdentifierList_identifierList: IDENTIFIER_START gen_7 gen_210;
libraryimport: metadata 'import' gen_160 gen_208 gen_228 gen_232 gen_234 ';';
combinator: gen_236 | gen_237;
libraryExport: metadata 'export' gen_160 gen_208 gen_228 gen_234 ';';
partDeclaration: metadata 'part' 'of' IDENTIFIER_START gen_7 gen_291 ';' gen_240 EOF;
dtype: typeName gen_21;
typeName: qualified | 'void';
typeArguments: '<' typeName gen_21 gen_22 '>';
typeAlias: metadata 'typedef' gen_29 IDENTIFIER_START gen_7 gen_19 formalParameterList_0 ';';
IDENTIFIER: IDENTIFIER_START gen_7;
IDENTIFIER_START: 'a' .. 'z' | 'A' .. 'Z' | '_' | '$';
IDENTIFIER_PART: 'a' .. 'z' | 'A' .. 'Z' | '_' | '$' | '0' .. '9';
LETTER: 'a' .. 'z' | 'A' .. 'Z';
program: programHeading gen_301 gen_302 B E G I N statement gen_376 E N D '.';
programHeading: gen_293 | gen_300;
usesUnitsPart: U S E S LETTER gen_294 gen_298 ';';
labelDeclarationPart: L A B E L '0' .. '9' gen_150 gen_305 ';';
constantDefinitionPart: C O N S T LETTER gen_294 '=' constant ';' gen_315;
constantChr: C H R '(' '0' .. '9' gen_150 ')';
constant: NUM_INT | NUM_REAL | gen_310 | IDENT | gen_311 | STRING_LITERAL | constantChr;
unsignedNumber: NUM_INT | NUM_REAL;
typeDefinitionPart: T Y P E LETTER gen_294 '=' gen_317 ';' gen_342;
functionType: F U N C T I O N gen_336 ':' typeIdentifier;
procedureType: P R O C E D U R E gen_336;
type: scalarType | subrangeType | IDENT | CHAR | BOOLEAN | INTEGER | REAL | STRING | stringtype | gen_319 | gen_320 | gen_323 | recordType | setType | gen_335 | FILE | pointerType;
simpleType: scalarType | subrangeType | IDENT | CHAR | BOOLEAN | INTEGER | REAL | STRING | stringtype;
scalarType: '(' LETTER gen_294 gen_298 ')';
subrangeType: constant '..' constant;
typeIdentifier: IDENT | CHAR | BOOLEAN | INTEGER | REAL | STRING;
unpackedStructuredType: gen_320 | gen_323 | recordType | setType | gen_335 | FILE;
stringtype: S T R I N G '[' gen_318 ']';
recordType: R E C O R D gen_324 E N D;
fieldList: gen_325 | variantPart;
variantPart: C A S E tag O F constant gen_331 ':' '(' fieldList ')' gen_333;
tag: gen_330 | IDENT | CHAR | BOOLEAN | INTEGER | REAL | STRING;
setType: S E T O F simpleType;
pointerType: '^' typeIdentifier;
variableDeclarationPart: V A R LETTER gen_294 gen_298 ':' type gen_326 ';';
procedureAndFunctionDeclarationPart: procedureOrFunctionDeclaration ';';
procedureOrFunctionDeclaration: procedureDeclaration | functionDeclaration;
procedureDeclaration: P R O C E D U R E LETTER gen_294 gen_336 ';' gen_302 B E G I N statement gen_376 E N D;
formalParameterList_1: '(' formalParameterSection gen_340 ')';
formalParameterSection: parameterGroup | gen_337 | gen_338 | gen_339;
parameterGroup: LETTER gen_294 gen_298 ':' typeIdentifier;
functionDeclaration: F U N C T I O N LETTER gen_294 gen_336 ':' typeIdentifier ';' gen_302 B E G I N statement gen_376 E N D;
statement: gen_344 | assignmentStatement | procedureStatement | gotoStatement | 系 | compoundStatement | ifStatement_1 | caseStatement | whileStatement_1 | repeatStatement | forStatement_1 | withStatement;
unlabelledStatement: assignmentStatement | procedureStatement | gotoStatement | 系 | compoundStatement | ifStatement_1 | caseStatement | whileStatement_1 | repeatStatement | forStatement_1 | withStatement;
assignmentStatement: gen_345 gen_347 ':=' gen_154 factor gen_352 gen_354 gen_356;
variable: gen_345 gen_347;
relationaloperator: '=' | '<>' | '<' | '<=' | '>=' | '>' | IN;
additiveoperator: '+' | '-' | OR;
multiplicativeoperator: '*' | '/' | DIV | MOD | AND;
factor: variable | gen_351 | functionDesignator | NUM_INT | NUM_REAL | constantChr | STRING_LITERAL | NIL | gen_362 | gen_368 | gen_369 | TRUE | FALSE;
functionDesignator: LETTER gen_294 '(' gen_154 factor gen_352 gen_354 gen_356 gen_358 gen_360 ')';
elementList: gen_363 | 系;
procedureStatement: LETTER gen_294 gen_374;
gotoStatement: G O T O '0' .. '9' gen_150;
compoundStatement: B E G I N statement gen_376 E N D;
ifStatement_1: I F gen_154 factor gen_352 gen_354 gen_356 T H E N statement gen_378;
caseStatement: C A S E gen_154 factor gen_352 gen_354 gen_356 O F constant gen_331 ':' statement gen_380 gen_382 E N D;
whileStatement_1: W H I L E gen_154 factor gen_352 gen_354 gen_356 D O statement;
repeatStatement: R E P E A T statement gen_376 U N T I L gen_154 factor gen_352 gen_354 gen_356;
forStatement_1: F O R LETTER gen_294 ':=' gen_154 factor gen_352 gen_354 gen_356 gen_384 gen_154 factor gen_352 gen_354 gen_356 D O statement;
withStatement: W I T H gen_345 gen_347 gen_385 D O statement;
A: 'a' | 'A';
B: 'b' | 'B';
C: 'c' | 'C';
D: 'd' | 'D';
E: 'e' | 'E';
F: 'f' | 'F';
G: 'g' | 'G';
H: 'h' | 'H';
I: 'i' | 'I';
K: 'k' | 'K';
L: 'l' | 'L';
M: 'm' | 'M';
N: 'n' | 'N';
O: 'o' | 'O';
P: 'p' | 'P';
R: 'r' | 'R';
S: 's' | 'S';
T: 't' | 'T';
U: 'u' | 'U';
V: 'v' | 'V';
W: 'w' | 'W';
Y: 'y' | 'Y';
AND: A N D;
BOOLEAN: B O O L E A N;
CHAR: C H A R;
DIV: D I V;
DOWNTO: D O W N T O;
FILE: F I L E;
IN: I N;
INTEGER: I N T E G E R;
MOD: M O D;
NIL: N I L;
OR: O R;
REAL: R E A L;
TO: T O;
INTERFACE: I N T E R F A C E;
STRING: S T R I N G;
IMPLEMENTATION: I M P L E M E N T A T I O N;
TRUE: T R U E;
FALSE: F A L S E;
IDENT: LETTER gen_294;
STRING_LITERAL: '\'' gen_312 '\'';
NUM_INT: '0' .. '9' gen_150;
NUM_REAL: '0' .. '9' gen_150 gen_307;
EXPONENT_1: 'e' gen_154 '0' .. '9' gen_150;
gen_140: ',' IDENTIFIER_START gen_7;
gen_210: gen_211 | 系;
gen_32: dtype | 系;
gen_31: 'final' gen_32;
gen_33: 'const' gen_32;
gen_42: '=' expression;
gen_41: gen_42 | 系;
gen_59: gen_60 | 系;
gen_29: 'void' | dtype | 系;
gen_19: typeParameters | 系;
gen_53: 'async' | 系;
gen_52: gen_53 '=>' expression ';';
gen_55: 'async' | 'async*' | 'sync*' | 系;
gen_54: gen_55 '{' statements '}';
gen_26: '(' ')';
gen_27: '(' normalFormalParameter gen_36 ')';
gen_40: ',' optionalFormalParameters;
gen_39: gen_40 | 系;
gen_38: '(' normalFormalParameter gen_36 gen_39 ')';
gen_51: '(' optionalFormalParameters ')';
gen_36: gen_37 | 系;
gen_43: gen_44 | 系;
gen_45: ',' | 系;
gen_49: gen_50 | 系;
gen_28: 'covariant' | 系;
gen_35: metadata gen_28 IDENTIFIER_START gen_7;
gen_30: gen_31 | gen_33 | 'var' | dtype | 系;
gen_34: formalParameterPart | 系;
gen_48: ':' expression;
gen_47: gen_48 | 系;
gen_46: normalFormalParameter gen_47;
gen_243: 'abstract' | 系;
gen_20: superclass | 系;
gen_244: mixins | 系;
gen_245: interfaces | 系;
gen_246: gen_247 | 系;
gen_242: metadata gen_243 'class' IDENTIFIER_START gen_7 gen_19 gen_20 gen_244 gen_245 '{' gen_246 '}';
gen_281: metadata gen_243 'class' IDENTIFIER_START gen_7 gen_19 '=' typeName gen_21 'with' typeName gen_21 gen_22 gen_245 ';';
gen_248: declaration ';';
gen_275: methodSignature functionBody;
gen_277: initializers | 系;
gen_276: IDENTIFIER_START gen_7 gen_9 formalParameterList_0 gen_277;
gen_263: 'static' | 系;
gen_278: gen_263 metadata gen_29 IDENTIFIER_START gen_7 gen_19 formalParameterList_0;
gen_279: gen_263 gen_29 'get' IDENTIFIER_START gen_7;
gen_280: gen_263 gen_29 'set' IDENTIFIER_START gen_7 formalParameterList_0;
gen_250: redirection | initializers | 系;
gen_249: 'const' IDENTIFIER_START gen_7 gen_9 formalParameterList_0 gen_250;
gen_257: IDENTIFIER_START gen_7 gen_9 formalParameterList_0 gen_250;
gen_258: 'external' 'const' IDENTIFIER_START gen_7 gen_9 formalParameterList_0;
gen_259: 'external' IDENTIFIER_START gen_7 gen_9 formalParameterList_0;
gen_262: 'external' gen_263;
gen_261: gen_262 | 系;
gen_260: gen_261 gen_29 'get' IDENTIFIER_START gen_7;
gen_264: gen_261 gen_29 'set' IDENTIFIER_START gen_7 formalParameterList_0;
gen_266: 'external' | 系;
gen_265: gen_266 gen_29 'operator' operator formalParameterList_0;
gen_267: gen_261 metadata gen_29 IDENTIFIER_START gen_7 gen_19 formalParameterList_0;
gen_269: 'final' | 'const';
gen_268: 'static' gen_269 gen_32 IDENTIFIER_START gen_7 '=' expression gen_270;
gen_272: 'final' gen_32 IDENTIFIER_START gen_7 gen_41 gen_59;
gen_274: 'static' | 'covariant' | 系;
gen_273: gen_274 varOrType IDENTIFIER_START gen_7 gen_41 gen_59;
gen_270: gen_271 | 系;
gen_10: '.' IDENTIFIER_START gen_7;
gen_9: gen_10 | 系;
gen_255: gen_256 | 系;
gen_251: 'super' '(' gen_12 ')';
gen_252: 'super' '.' IDENTIFIER_START gen_7 '(' gen_12 ')';
gen_254: 'this' '.';
gen_253: gen_254 | 系;
gen_118: gen_119 | 系;
gen_282: gen_283 | 系;
gen_24: gen_25 | 系;
gen_11: arguments | 系;
gen_15: assignableExpression assignmentOperator expression;
gen_64: equalityExpression gen_109 gen_111 gen_113 gen_115 gen_118;
gen_117: assignableExpression assignmentOperator expressionWithoutCascade;
gen_148: ',' expression;
gen_127: gen_128 | 系;
gen_17: 'super' unconditionalAssignableSelector;
gen_219: '(' expression ')';
gen_150: NUM_INT | 系;
gen_152: '.' '0' .. '9' gen_150;
gen_151: gen_152 | 系;
gen_153: EXPONENT_0 | 系;
gen_149: '0' .. '9' gen_150 gen_151 gen_153;
gen_155: '.' '0' .. '9' gen_150 gen_153;
gen_154: '+' | '-' | 系;
gen_157: gen_158 | 系;
gen_156: '0x' HEX_DIGIT gen_157;
gen_159: '0X' HEX_DIGIT gen_157;
gen_160: gen_161 | gen_169 | gen_177 | gen_181 | gen_185 | gen_193 | gen_198 | gen_203;
gen_208: stringLiteral | 系;
gen_186: gen_187 | 系;
gen_185: '\"' gen_186 '\"';
gen_194: gen_195 | 系;
gen_193: '\'' gen_194 '\'';
gen_202: '\'' | '\n' | '\r';
gen_201: ~gen_202;
gen_199: gen_200 | 系;
gen_198: 'r\'' gen_199 '\'';
gen_207: '\"' | '\n' | '\r';
gen_206: ~gen_207;
gen_204: gen_205 | 系;
gen_203: 'r\"' gen_204 '\"';
gen_189: '\\' | '\"' | '\n' | '\r';
gen_188: ~gen_189;
gen_192: '\n' | '\r';
gen_191: ~gen_192;
gen_190: '\\' gen_191;
gen_197: '\\' | '\'' | '\n' | '\r';
gen_196: ~gen_197;
gen_162: gen_163 | 系;
gen_161: '\"\"\"' gen_162 '\"\"\"';
gen_170: gen_171 | 系;
gen_169: '\'\'\'' gen_170 '\'\'\'';
gen_167: ~'\"';
gen_166: '\"' gen_167;
gen_168: '\"\"' gen_167;
gen_180: gen_167 | gen_166 | gen_168;
gen_178: gen_179 | 系;
gen_177: 'r\"\"\"' gen_178 '\"\"\"';
gen_175: ~'\'';
gen_174: '\'' gen_175;
gen_176: '\'\'' gen_175;
gen_184: gen_175 | gen_174 | gen_176;
gen_182: gen_183 | 系;
gen_181: 'r\'\'\'' gen_182 '\'\'\'';
gen_165: '\\' | '\"';
gen_164: ~gen_165;
gen_173: '\\' | '\'';
gen_172: ~gen_173;
gen_209: '~' | '*' | '/' | '%' | '~/' | '+' | '-' | '<<' | '>>' | '>>>' | '>=' | '>' | '<=' | '<' | '==' | '&' | '^' | '|' | '[]' | '[]=' | dottedIdentifierList_identifierList;
gen_212: 'const' | 系;
gen_21: typeArguments | 系;
gen_218: expression gen_127 gen_45;
gen_217: gen_218 | 系;
gen_215: gen_216 | 系;
gen_214: expression ':' expression gen_215 gen_45;
gen_213: gen_214 | 系;
gen_13: argumentList gen_45;
gen_12: gen_13 | 系;
gen_223: gen_224 | 系;
gen_14: IDENTIFIER_START gen_7 ':' expression gen_223;
gen_225: expression gen_127 gen_223;
gen_120: gen_121 | 系;
gen_122: gen_123 | 系;
gen_125: assignmentOperator expressionWithoutCascade;
gen_124: gen_125 | 系;
gen_18: '[' expression ']';
gen_116: '?' expressionWithoutCascade ':' expressionWithoutCascade;
gen_115: gen_116 | 系;
gen_113: gen_114 | 系;
gen_111: gen_112 | 系;
gen_109: gen_110 | 系;
gen_107: equalityOperator relationalExpression;
gen_106: gen_107 | 系;
gen_65: relationalExpression gen_106;
gen_108: 'super' equalityOperator relationalExpression;
gen_104: relationalOperator bitwiseOrExpression;
gen_102: typeTest | typeCast | gen_104 | 系;
gen_66: bitwiseOrExpression gen_102;
gen_105: 'super' relationalOperator bitwiseOrExpression;
gen_97: gen_98 | 系;
gen_67: bitwiseXorExpression gen_97;
gen_100: gen_101 | 系;
gen_99: 'super' '|' bitwiseOrExpression gen_100;
gen_94: gen_95 | 系;
gen_68: bitwiseAndExpression gen_94;
gen_96: 'super' '^' bitwiseAndExpression gen_94;
gen_91: gen_92 | 系;
gen_69: shiftExpression gen_91;
gen_93: 'super' '&' shiftExpression gen_91;
gen_88: gen_89 | 系;
gen_70: additiveExpression gen_88;
gen_90: 'super' shiftOperator additiveExpression gen_88;
gen_85: gen_86 | 系;
gen_71: multiplicativeExpression gen_85;
gen_87: 'super' additiveOperator_sign multiplicativeExpression gen_85;
gen_82: gen_83 | 系;
gen_72: unaryExpression gen_82;
gen_84: 'super' multiplicativeOperator unaryExpression gen_82;
gen_73: prefixOperator unaryExpression;
gen_80: '-' | '~';
gen_79: gen_80 'super';
gen_81: incrementOperator assignableExpression;
gen_74: assignableExpression incrementOperator;
gen_76: gen_77 | 系;
gen_75: primary gen_76;
gen_221: gen_120 assignableSelector;
gen_220: gen_221 | 系;
gen_16: primary gen_220;
gen_222: 'super' unconditionalAssignableSelector IDENTIFIER_START gen_7;
gen_78: '?.' IDENTIFIER_START gen_7;
gen_103: '!' | 系;
gen_57: gen_58 | 系;
gen_63: gen_15 | gen_64 | throwExpression | 系;
gen_135: 'else' gen_57 nonLabledStatment;
gen_134: gen_135 | 系;
gen_61: 'await' | 系;
gen_126: expressionList | 系;
gen_62: forInitializerStatement gen_63 ';' gen_126;
gen_129: metadata finalConstVarOrType IDENTIFIER_START gen_7 'in' expression;
gen_130: IDENTIFIER_START gen_7 'in' expression;
gen_131: gen_132 | 系;
gen_133: defaultCase | 系;
gen_143: gen_144 | 系;
gen_145: finallyPart | 系;
gen_137: onPart gen_143 gen_145;
gen_136: gen_137 | finallyPart;
gen_138: 'catch' '(' IDENTIFIER_START gen_7 gen_139 ')' '{' statements '}';
gen_142: catchPart | 系;
gen_141: 'on' typeName gen_21 gen_142 '{' statements '}';
gen_139: gen_140 | 系;
gen_146: IDENTIFIER | 系;
gen_147: gen_148 | 系;
gen_284: gen_266 metadata gen_29 IDENTIFIER_START gen_7 gen_19 formalParameterList_0 ';';
gen_285: gen_266 gen_29 'get' IDENTIFIER_START gen_7 ';';
gen_286: gen_266 gen_29 'set' IDENTIFIER_START gen_7 formalParameterList_0 ';';
gen_287: gen_29 'get' IDENTIFIER_START gen_7 functionBody;
gen_288: gen_29 'set' IDENTIFIER_START gen_7 formalParameterList_0 functionBody;
gen_289: gen_269 gen_32 IDENTIFIER_START gen_7 '=' expression gen_270 ';';
gen_290: metadata finalConstVarOrType IDENTIFIER_START gen_7 gen_210 ';';
gen_1: scriptTag | 系;
gen_5: libraryName | 系;
gen_226: gen_227 | 系;
gen_238: gen_239 | 系;
gen_240: gen_241 | 系;
gen_4: ~NEWLINE;
gen_2: gen_3 | 系;
gen_233: 'as' IDENTIFIER_START gen_7;
gen_232: gen_233 | 系;
gen_234: gen_235 | 系;
gen_236: 'show' IDENTIFIER_START gen_7 gen_210;
gen_237: 'hide' IDENTIFIER_START gen_7 gen_210;
gen_291: gen_292 | 系;
gen_228: gen_229 | 系;
gen_231: '==' gen_160 gen_208;
gen_230: gen_231 | 系;
gen_22: gen_23 | 系;
gen_7: gen_8 | 系;
gen_301: INTERFACE | 系;
gen_297: scalarType | 系;
gen_293: P R O G R A M LETTER gen_294 gen_297 ';';
gen_300: U N I T LETTER gen_294 ';';
gen_304: labelDeclarationPart | constantDefinitionPart | typeDefinitionPart | variableDeclarationPart | procedureAndFunctionDeclarationPart | usesUnitsPart | IMPLEMENTATION;
gen_302: gen_303 | 系;
gen_305: gen_306 | 系;
gen_315: gen_316 | 系;
gen_310: additiveOperator_sign unsignedNumber;
gen_311: additiveOperator_sign LETTER gen_294;
gen_342: gen_343 | 系;
gen_317: scalarType | subrangeType | IDENT | CHAR | BOOLEAN | INTEGER | REAL | STRING | stringtype | gen_319 | gen_320 | gen_323 | recordType | setType | gen_335 | FILE | pointerType | functionType | procedureType;
gen_336: formalParameterList_1 | 系;
gen_319: P A C K E D unpackedStructuredType;
gen_318: IDENT | NUM_INT | NUM_REAL;
gen_320: A R R A Y '[' simpleType gen_321 ']' O F type;
gen_323: A R R A Y '(.' simpleType gen_321 '.)' O F type;
gen_321: gen_322 | 系;
gen_324: gen_325 | variantPart | 系;
gen_329: ';' C A S E tag O F constant gen_331 ':' '(' fieldList ')' gen_333;
gen_328: gen_329 | 系;
gen_325: LETTER gen_294 gen_298 ':' type gen_326 gen_328;
gen_326: gen_327 | 系;
gen_333: gen_334 | 系;
gen_330: LETTER gen_294 ':' typeIdentifier;
gen_335: F I L E O F type;
gen_340: gen_341 | 系;
gen_337: V A R LETTER gen_294 gen_298 ':' typeIdentifier;
gen_338: F U N C T I O N LETTER gen_294 gen_298 ':' typeIdentifier;
gen_339: P R O C E D U R E LETTER gen_294 gen_298 ':' typeIdentifier;
gen_298: gen_299 | 系;
gen_331: gen_332 | 系;
gen_344: '0' .. '9' gen_150 ':' unlabelledStatement;
gen_346: '@' LETTER gen_294;
gen_345: gen_346 | IDENT;
gen_370: gen_371 | 系;
gen_350: '[' gen_154 factor gen_352 gen_354 gen_356 gen_370 ']';
gen_372: '(.' gen_154 factor gen_352 gen_354 gen_356 gen_370 '.)';
gen_373: '.' LETTER gen_294;
gen_349: gen_350 | gen_372 | gen_373 | '^';
gen_347: gen_348 | 系;
gen_357: relationaloperator gen_154 factor gen_352 gen_354 gen_356;
gen_356: gen_357 | 系;
gen_355: additiveoperator gen_154 factor gen_352 gen_354;
gen_354: gen_355 | 系;
gen_353: multiplicativeoperator gen_154 factor gen_352;
gen_352: gen_353 | 系;
gen_351: '(' gen_154 factor gen_352 gen_354 gen_356 ')';
gen_369: N O T factor;
gen_360: gen_361 | 系;
gen_362: '[' elementList ']';
gen_368: '(.' elementList '.)';
gen_366: gen_367 | 系;
gen_363: gen_154 factor gen_352 gen_354 gen_356 gen_364 gen_366;
gen_365: '..' gen_154 factor gen_352 gen_354 gen_356;
gen_364: gen_365 | 系;
gen_375: '(' gen_154 factor gen_352 gen_354 gen_356 gen_358 gen_360 ')';
gen_374: gen_375 | 系;
gen_358: gen_359 | 系;
gen_376: gen_377 | 系;
gen_379: E L S E statement;
gen_378: gen_379 | 系;
gen_380: gen_381 | 系;
gen_383: ';' E L S E statement gen_376;
gen_382: gen_383 | 系;
gen_384: TO | DOWNTO;
gen_385: gen_386 | 系;
gen_296: 'a' .. 'z' | 'A' .. 'Z' | '0' .. '9' | '_';
gen_294: gen_295 | 系;
gen_314: '\'\'' | gen_175;
gen_312: gen_313 | 系;
gen_309: EXPONENT_1 | 系;
gen_308: '.' '0' .. '9' gen_150 gen_309;
gen_307: gen_308 | 系 | EXPONENT_1;
gen_6: '@' IDENTIFIER_START gen_7 gen_9 gen_9 gen_11 metadata;
gen_56: gen_57 nonLabledStatment statements;
gen_211: ',' IDENTIFIER_START gen_7 gen_210;
gen_60: ',' IDENTIFIER_START gen_7 gen_41 gen_59;
gen_37: ',' normalFormalParameter gen_36;
gen_44: ',' normalFormalParameter gen_41 gen_43;
gen_50: ',' defaultNamedParameter gen_49;
gen_247: metadata classMemberDefinition gen_246;
gen_271: ',' IDENTIFIER_START gen_7 '=' expression gen_270;
gen_256: ',' initializerListEntry gen_255;
gen_119: '..' cascadeSelector gen_120 gen_122 gen_124 gen_118;
gen_283: ',' metadata IDENTIFIER_START gen_7 gen_282;
gen_25: ',' metadata IDENTIFIER_START gen_7 gen_20 gen_24;
gen_128: ',' expression gen_127;
gen_158: HEX_DIGIT gen_157;
gen_187: StringContentDQ gen_186;
gen_195: StringContentSQ gen_194;
gen_200: gen_201 gen_199;
gen_205: gen_206 gen_204;
gen_163: StringContentTDQ gen_162;
gen_171: StringContentTSQ gen_170;
gen_179: gen_180 gen_178;
gen_183: gen_184 gen_182;
gen_216: ',' expression ':' expression gen_215;
gen_224: ',' IDENTIFIER_START gen_7 ':' expression gen_223;
gen_121: gen_21 '(' gen_12 ')' gen_120;
gen_123: assignableSelector gen_120 gen_122;
gen_114: '??' equalityExpression gen_109 gen_111 gen_113;
gen_112: '||' equalityExpression gen_109 gen_111;
gen_110: '&&' equalityExpression gen_109;
gen_98: '|' bitwiseXorExpression gen_97;
gen_101: '|' bitwiseOrExpression gen_100;
gen_95: '^' bitwiseAndExpression gen_94;
gen_92: '&' shiftExpression gen_91;
gen_89: shiftOperator additiveExpression gen_88;
gen_86: additiveOperator_sign multiplicativeExpression gen_85;
gen_83: multiplicativeOperator unaryExpression gen_82;
gen_77: selector gen_76;
gen_58: IDENTIFIER_START gen_7 ':' gen_57;
gen_132: gen_57 'case' expression ':' statements gen_131;
gen_144: onPart gen_143;
gen_227: importOrExport gen_226;
gen_239: metadata 'part' gen_160 gen_208 ';' gen_238;
gen_241: topLevelDefinition gen_240;
gen_3: gen_4 gen_2;
gen_235: combinator gen_234;
gen_292: '.' IDENTIFIER_START gen_7 gen_291;
gen_229: 'if' '(' IDENTIFIER_START gen_7 gen_210 gen_230 ')' gen_160 gen_208 gen_228;
gen_23: ',' typeName gen_21 gen_22;
gen_8: IDENTIFIER_PART gen_7;
gen_303: gen_304 gen_302;
gen_306: ',' '0' .. '9' gen_150 gen_305;
gen_316: LETTER gen_294 '=' constant ';' gen_315;
gen_343: LETTER gen_294 '=' gen_317 ';' gen_342;
gen_322: ',' simpleType gen_321;
gen_327: ';' LETTER gen_294 gen_298 ':' type gen_326;
gen_334: ';' constant gen_331 ':' '(' fieldList ')' gen_333;
gen_341: ';' formalParameterSection gen_340;
gen_299: ',' LETTER gen_294 gen_298;
gen_332: ',' constant gen_331;
gen_371: ',' gen_154 factor gen_352 gen_354 gen_356 gen_370;
gen_348: gen_349 gen_347;
gen_361: ',' gen_154 factor gen_352 gen_354 gen_356 gen_358 gen_360;
gen_367: ',' gen_154 factor gen_352 gen_354 gen_356 gen_364 gen_366;
gen_359: ':' gen_154 factor gen_352 gen_354 gen_356 gen_358;
gen_377: ';' statement gen_376;
gen_381: ';' constant gen_331 ':' statement gen_380;
gen_386: ',' gen_345 gen_347 gen_385;
gen_295: gen_296 gen_294;
gen_313: gen_314 gen_312