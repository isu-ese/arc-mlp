gen_0: NEWLINE | simple_stmt | gen_205 | chunk;
decorated: '@' gen_37 gen_38 gen_184 gen_226 NEWLINE gen_227 gen_229;
funcdef: 'def' gen_37 gen_38 '(' gen_33 ')' ':' suite;
fpdef: NAME | gen_41;
stmt: simple_stmt | if_stmt | while_stmt | for_stmt | try_stmt | with_stmt | funcdef | classdef | decorated;
simple_stmt: small_stmt gen_202 gen_204 NEWLINE;
small_stmt: expr_stmt | print_stmt | del_stmt | 'pass' | 'break' | 'continue' | return_stmt | raise_stmt | yield_expr | import_name | import_from | global_stmt | exec_stmt | assert_stmt;
expr_stmt: test gen_9 gen_11 gen_169;
augassign: '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>>=' | '**=' | '//=';
print_stmt: gen_37 gen_38 gen_174;
del_stmt: 'del' factor gen_13 gen_15 gen_17 gen_20 gen_22 gen_24 gen_26 gen_11;
return_stmt: 'return' gen_8;
raise_stmt: 'raise' gen_178;
import_name: 'import' gen_37 gen_38 gen_184 gen_186 gen_188;
import_from: 'from' gen_190 'import' gen_194;
import_as_names: gen_37 gen_38 gen_186 gen_196 gen_11;
global_stmt: 'global' gen_37 gen_38 gen_198;
exec_stmt: 'exec' factor gen_13 gen_15 gen_17 gen_20 gen_22 gen_24 gen_200;
assert_stmt: 'assert' test gen_182;
compound_stmt: if_stmt | while_stmt | for_stmt | try_stmt | with_stmt | funcdef | classdef | decorated;
if_stmt: 'if' test ':' suite gen_232 gen_207;
while_stmt: 'while' test ':' suite gen_207;
for_stmt: 'for' factor gen_13 gen_15 gen_17 gen_20 gen_22 gen_24 gen_26 gen_11 'in' test gen_9 gen_11 ':' suite gen_207;
try_stmt: 'try' ':' suite gen_209;
with_stmt: 'with' test gen_220 gen_222 ':' suite;
suite: simple_stmt | gen_206;
old_test: or_test | old_lambdef;
old_lambdef: 'lambda' gen_33 ':' old_test;
test: gen_1 | lambdef;
or_test: not_test gen_28 gen_30;
not_test: gen_2 | comparison;
comparison: factor gen_13 gen_15 gen_17 gen_20 gen_22 gen_24 gen_163;
comp_op: '<' | '>' | '==' | '>=' | '<=' | '<>' | '!=' | 'in' | gen_165 | 'is' | gen_166;
factor: gen_3 | power;
power: atom gen_137 gen_161;
atom: gen_5 | gen_55 | gen_63 | gen_70 | gen_71 | NAME | gen_72 | gen_92 | gen_98 | gen_101;
listmaker: test gen_57;
testlist_comp: test gen_12;
lambdef: 'lambda' gen_33 ':' test;
trailer: gen_139 | gen_154 | gen_160;
subscript: gen_71 | gen_1 | lambdef | gen_155;
sliceop: ':' gen_156;
testlist: test gen_9 gen_11;
classdef: 'class' gen_37 gen_38 gen_224 ':' suite;
arglist: gen_141 gen_146;
argument: gen_143 | gen_145;
list_for: 'for' factor gen_13 gen_15 gen_17 gen_20 gen_22 gen_24 gen_26 gen_11 'in' old_test gen_58 gen_62;
list_if: 'if' old_test gen_62;
comp_for: 'for' factor gen_13 gen_15 gen_17 gen_20 gen_22 gen_24 gen_26 gen_11 'in' not_test gen_28 gen_30 gen_32;
comp_if: 'if' old_test gen_32;
yield_expr: 'yield' gen_7 gen_8;
NAME: gen_37 gen_38;
chunk: gen_234 gen_271 EOF;
stat: ';' | gen_236 | functioncall | label | 'break' | gen_302 | gen_303 | gen_304 | gen_305 | gen_306 | gen_311 | gen_314 | gen_315 | gen_316 | gen_317;
retstat: 'return' gen_272 gen_204;
label: '::' gen_37 gen_38 '::';
explist: exp gen_273;
exp: 'nil' | 'false' | 'true' | INT | HEX | gen_239 | gen_240 | gen_241 | gen_242 | gen_245 | gen_246 | NORMALSTRING | CHARSTRING | LONGSTRING | '...' | functiondef | prefixexp | tableconstructor | gen_285 | gen_286 | gen_287 | gen_288 | gen_289 | gen_290 | gen_291 | gen_292 | gen_293;
prefixexp: varOrExp gen_277;
functioncall: varOrExp gen_279 args gen_277;
varOrExp: var | gen_299;
var: gen_237 gen_275;
args: gen_281 | tableconstructor | NORMALSTRING | CHARSTRING | LONGSTRING;
functiondef: 'function' '(' gen_267 ')' gen_234 gen_271 'end';
tableconstructor: '{' gen_282 '}';
fieldlist: field gen_294 gen_296;
field: gen_283 | gen_284 | 'nil' | 'false' | 'true' | INT | HEX | gen_239 | gen_240 | gen_241 | gen_242 | gen_245 | gen_246 | NORMALSTRING | CHARSTRING | LONGSTRING | '...' | functiondef | prefixexp | tableconstructor | gen_285 | gen_286 | gen_287 | gen_288 | gen_289 | gen_290 | gen_291 | gen_292 | gen_293;
fieldsep: ',' | ';';
operatorComparison: '<' | '>' | '<=' | '>=' | '~=' | '==';
operatorAddSub: '+' | '-';
operatorMulDivMod: '*' | '/' | '%' | '//';
operatorBitwise: '&' | '|' | '~' | '<<' | '>>';
operatorUnary: 'not' | '#' | '-' | '~';
NORMALSTRING: '\"' gen_247 '\"';
CHARSTRING: '\'' gen_258 '\'';
LONGSTRING: '[' NESTED_STR ']';
NESTED_STR: gen_263 | gen_264;
INT: '0' .. '9' gen_81;
HEX: '0' gen_75 HexDigit gen_76;
ExponentPart: gen_79 gen_80 '0' .. '9' gen_81;
HexExponentPart: gen_244 gen_80 '0' .. '9' gen_81;
HexEscape: '\\' 'x' HexDigit HexDigit;
UtfEscape: '\\' 'u{' HexDigit gen_76 '}';
HexDigit: '0' .. '9' | 'a' .. 'f' | 'A' .. 'F';
gen_205: compound_stmt NEWLINE;
gen_140: arglist | ϵ;
gen_139: '(' gen_140 ')';
gen_226: gen_139 | ϵ;
gen_227: gen_228 | ϵ;
gen_229: classdef | funcdef;
gen_33: gen_34 | gen_51 | ϵ;
gen_45: '=' test;
gen_44: gen_45 | ϵ;
gen_35: gen_36 | ϵ;
gen_49: ',' '**' gen_37 gen_38;
gen_48: gen_49 | ϵ;
gen_47: '*' gen_37 gen_38 gen_48;
gen_50: '**' gen_37 gen_38;
gen_46: gen_47 | gen_50;
gen_34: gen_35 gen_46;
gen_52: gen_53 | ϵ;
gen_11: ',' | ϵ;
gen_51: fpdef gen_44 gen_52 gen_11;
gen_41: '(' fpdef gen_42 gen_11 ')';
gen_42: gen_43 | ϵ;
gen_202: gen_203 | ϵ;
gen_204: ';' | ϵ;
gen_171: yield_expr | testlist;
gen_170: augassign gen_171;
gen_173: gen_172 | ϵ;
gen_169: gen_170 | gen_172 | ϵ;
gen_183: ',' test;
gen_9: gen_10 | ϵ;
gen_8: testlist | ϵ;
gen_177: ',' test gen_9 gen_11;
gen_176: gen_177 | ϵ;
gen_175: '>>' test gen_176;
gen_174: testlist | ϵ | gen_175;
gen_182: gen_183 | ϵ;
gen_181: ',' test gen_182;
gen_180: gen_181 | ϵ;
gen_179: test gen_180;
gen_178: gen_179 | ϵ;
gen_192: gen_193 | ϵ;
gen_191: gen_192 gen_37 gen_38 gen_184;
gen_193: '.' gen_192;
gen_190: gen_191 | gen_193;
gen_195: '(' gen_37 gen_38 gen_186 gen_196 gen_11 ')';
gen_194: '*' | gen_195 | import_as_names;
gen_187: 'as' gen_37 gen_38;
gen_186: gen_187 | ϵ;
gen_196: gen_197 | ϵ;
gen_188: gen_189 | ϵ;
gen_160: '.' gen_37 gen_38;
gen_184: gen_185 | ϵ;
gen_198: gen_199 | ϵ;
gen_201: 'in' test gen_182;
gen_200: gen_201 | ϵ;
gen_232: gen_233 | ϵ;
gen_208: 'else' ':' suite;
gen_207: gen_208 | ϵ;
gen_216: gen_217 | ϵ;
gen_219: 'finally' ':' suite;
gen_218: gen_219 | ϵ;
gen_210: 'except' gen_211 ':' suite gen_216 gen_207 gen_218;
gen_209: gen_210 | gen_219;
gen_222: gen_223 | ϵ;
gen_221: 'as' factor gen_13 gen_15 gen_17 gen_20 gen_22 gen_24;
gen_220: gen_221 | ϵ;
gen_215: 'as' | ',';
gen_214: gen_215 test;
gen_213: gen_214 | ϵ;
gen_212: test gen_213;
gen_211: gen_212 | ϵ;
gen_230: gen_231 | ϵ;
gen_206: NEWLINE INDENT stmt gen_230 DEDENT;
gen_60: gen_61 | ϵ;
gen_59: ',' old_test gen_60 gen_11;
gen_58: gen_59 | ϵ;
gen_168: 'if' not_test gen_28 gen_30 'else' test;
gen_167: gen_168 | ϵ;
gen_1: not_test gen_28 gen_30 gen_167;
gen_30: gen_31 | ϵ;
gen_28: gen_29 | ϵ;
gen_2: 'not' not_test;
gen_163: gen_164 | ϵ;
gen_165: 'not' 'in';
gen_166: 'is' 'not';
gen_24: gen_25 | ϵ;
gen_22: gen_23 | ϵ;
gen_20: gen_21 | ϵ;
gen_19: '<<' | '>>';
gen_17: gen_18 | ϵ;
gen_15: gen_16 | ϵ;
gen_13: gen_14 | ϵ;
gen_4: '+' | '-' | '~';
gen_3: gen_4 factor;
gen_137: gen_138 | ϵ;
gen_162: '**' factor;
gen_161: gen_162 | ϵ;
gen_6: yield_expr | testlist_comp | ϵ;
gen_5: '(' gen_6 ')';
gen_56: listmaker | ϵ;
gen_55: '[' gen_56 ']';
gen_64: gen_65 | testlist_comp | ϵ;
gen_63: '{' gen_64 '}';
gen_70: '`' test gen_9 '`';
gen_71: '.' '.' '.';
gen_136: gen_101 | ϵ;
gen_101: gen_102 gen_107 gen_136;
gen_54: gen_9 gen_11;
gen_57: list_for | gen_54;
gen_12: comp_for | gen_54;
gen_154: '[' subscript gen_158 gen_11 ']';
gen_158: gen_159 | ϵ;
gen_156: gen_1 | lambdef | ϵ;
gen_157: sliceop | ϵ;
gen_155: gen_156 ':' gen_156 gen_157;
gen_26: gen_27 | ϵ;
gen_68: gen_69 | ϵ;
gen_67: gen_68 gen_11;
gen_66: comp_for | gen_67;
gen_65: test ':' test gen_66;
gen_225: '(' gen_8 ')';
gen_224: gen_225 | ϵ;
gen_141: gen_142 | ϵ;
gen_147: argument gen_11;
gen_149: gen_150 | ϵ;
gen_152: ',' '**' test;
gen_151: gen_152 | ϵ;
gen_148: '*' test gen_149 gen_151;
gen_153: '**' test;
gen_146: gen_147 | gen_148 | gen_153;
gen_144: comp_for | ϵ;
gen_143: test gen_144;
gen_145: test '=' test;
gen_62: list_for | list_if | ϵ;
gen_32: comp_for | comp_if | ϵ;
gen_7: 'from' | ϵ;
gen_37: 'a' .. 'z' | 'A' .. 'Z' | '_';
gen_40: 'a' .. 'z' | 'A' .. 'Z' | '_' | '0' .. '9';
gen_38: gen_39 | ϵ;
gen_75: 'x' | 'X';
gen_76: gen_77 | ϵ;
gen_79: 'e' | 'E';
gen_80: '+' | '-' | ϵ;
gen_81: INT | ϵ;
gen_78: 'l' | 'L' | ExponentPart | ϵ;
gen_74: gen_75 HexDigit gen_76 gen_78;
gen_83: 'o' | 'O';
gen_84: gen_85 | ϵ;
gen_86: 'l' | 'L' | ϵ;
gen_82: gen_83 '0' .. '7' gen_84 gen_86;
gen_88: 'b' | 'B';
gen_89: '0' | '1';
gen_90: gen_91 | ϵ;
gen_87: gen_88 gen_89 gen_90 gen_86;
gen_73: gen_74 | gen_82 | gen_87;
gen_72: '0' gen_73;
gen_94: '0' .. '9' gen_81 '.' gen_81;
gen_95: '.' '0' .. '9' gen_81;
gen_93: gen_94 | gen_95;
gen_96: ExponentPart | ϵ;
gen_97: 'j' | 'J' | ϵ;
gen_92: gen_93 gen_96 gen_97;
gen_100: gen_79 gen_80 '0' .. '9' gen_81 gen_97;
gen_99: 'l' | 'L' | gen_100 | 'j' | 'J' | ϵ;
gen_98: '0' .. '9' gen_81 gen_99;
gen_104: 'u' | 'U' | 'b' | 'B' | ϵ;
gen_105: 'r' | 'R' | ϵ;
gen_103: gen_104 gen_105;
gen_106: gen_105 gen_104;
gen_102: gen_103 | gen_106;
gen_115: ' ' | '\t';
gen_116: gen_117 | ϵ;
gen_120: '\r' | ϵ;
gen_119: gen_120 '\n';
gen_118: gen_119 | ϵ;
gen_114: gen_115 gen_116 gen_118;
gen_113: gen_114 | .;
gen_112: '\\' gen_113;
gen_122: '\\' | '\r' | '\n' | '\'';
gen_121: ~gen_122;
gen_111: gen_112 | gen_121;
gen_109: gen_110 | ϵ;
gen_108: '\'' gen_109 '\'';
gen_128: '\\' | '\r' | '\n' | '\"';
gen_127: ~gen_128;
gen_126: gen_112 | gen_127;
gen_124: gen_125 | ϵ;
gen_123: '\"' gen_124 '\"';
gen_133: '\\' .;
gen_134: ~'\\';
gen_132: gen_133 | gen_134;
gen_130: gen_131 | ϵ;
gen_129: '\"\"\"' gen_130 '\"\"\"';
gen_135: '\'\'\'' gen_130 '\'\'\'';
gen_107: gen_108 | gen_123 | gen_129 | gen_135;
gen_234: gen_235 | ϵ;
gen_271: retstat | ϵ;
gen_236: gen_237 gen_275 gen_300 '=' exp gen_273;
gen_302: 'goto' gen_37 gen_38;
gen_303: 'do' gen_234 gen_271 'end';
gen_304: 'while' exp 'do' gen_234 gen_271 'end';
gen_305: 'repeat' gen_234 gen_271 'until' exp;
gen_307: gen_308 | ϵ;
gen_310: 'else' gen_234 gen_271;
gen_309: gen_310 | ϵ;
gen_306: 'if' exp 'then' gen_234 gen_271 gen_307 gen_309 'end';
gen_313: ',' exp;
gen_312: gen_313 | ϵ;
gen_311: 'for' gen_37 gen_38 '=' exp ',' exp gen_312 'do' gen_234 gen_271 'end';
gen_314: 'for' gen_37 gen_38 gen_198 'in' exp gen_273 'do' gen_234 gen_271 'end';
gen_315: 'function' gen_37 gen_38 gen_184 gen_279 '(' gen_267 ')' gen_234 gen_271 'end';
gen_316: 'local' 'function' gen_37 gen_38 '(' gen_267 ')' gen_234 gen_271 'end';
gen_319: '=' exp gen_273;
gen_318: gen_319 | ϵ;
gen_317: 'local' gen_37 gen_38 gen_198 gen_318;
gen_272: explist | ϵ;
gen_280: ':' gen_37 gen_38;
gen_279: gen_280 | ϵ;
gen_300: gen_301 | ϵ;
gen_273: gen_274 | ϵ;
gen_285: exp '^' exp;
gen_286: operatorUnary exp;
gen_287: exp operatorMulDivMod exp;
gen_288: exp operatorAddSub exp;
gen_289: exp '..' exp;
gen_290: exp operatorComparison exp;
gen_291: exp 'and' exp;
gen_292: exp 'or' exp;
gen_293: exp operatorBitwise exp;
gen_277: gen_278 | ϵ;
gen_299: '(' exp ')';
gen_238: '(' exp ')' gen_277 gen_297;
gen_237: NAME | gen_238;
gen_275: gen_276 | ϵ;
gen_298: '[' exp ']';
gen_297: gen_298 | gen_160;
gen_281: '(' gen_272 ')';
gen_267: gen_268 | '...' | ϵ;
gen_270: ',' '...';
gen_269: gen_270 | ϵ;
gen_268: gen_37 gen_38 gen_198 gen_269;
gen_282: fieldlist | ϵ;
gen_294: gen_295 | ϵ;
gen_296: ',' | ';' | ϵ;
gen_283: '[' exp ']' '=' exp;
gen_284: gen_37 gen_38 '=' exp;
gen_257: '\\' | '\"';
gen_256: ~gen_257;
gen_249: gen_250 | gen_252 | gen_253 | gen_254 | gen_255 | HexEscape | UtfEscape | gen_256;
gen_247: gen_248 | ϵ;
gen_262: '\'' | '\\';
gen_261: ~gen_262;
gen_260: gen_250 | gen_252 | gen_253 | gen_254 | gen_255 | HexEscape | UtfEscape | gen_261;
gen_258: gen_259 | ϵ;
gen_263: '=' NESTED_STR '=';
gen_265: gen_266 | ϵ;
gen_264: '[' gen_265 ']';
gen_239: '0' .. '9' gen_81 '.' gen_81 gen_96;
gen_240: '.' '0' .. '9' gen_81 gen_96;
gen_241: '0' .. '9' gen_81 gen_79 gen_80 '0' .. '9' gen_81;
gen_243: HexExponentPart | ϵ;
gen_242: '0' gen_75 HexDigit gen_76 '.' gen_76 gen_243;
gen_245: '0' gen_75 '.' HexDigit gen_76 gen_243;
gen_246: '0' gen_75 HexDigit gen_76 gen_244 gen_80 '0' .. '9' gen_81;
gen_244: 'p' | 'P';
gen_251: 'a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | 'z' | '\"' | '\'' | '\\';
gen_250: '\\' gen_251;
gen_252: '\\' gen_120 '\n';
gen_253: '\\' '0' .. '9';
gen_254: '\\' '0' .. '9' '0' .. '9';
gen_255: '\\' '0' .. '2' '0' .. '9' '0' .. '9';
gen_228: '@' gen_37 gen_38 gen_184 gen_226 NEWLINE gen_227;
gen_36: fpdef gen_44 ',' gen_35;
gen_53: ',' fpdef gen_44 gen_52;
gen_43: ',' fpdef gen_42;
gen_203: ';' small_stmt gen_202;
gen_172: '=' gen_171 gen_173;
gen_10: ',' test gen_9;
gen_197: ',' gen_37 gen_38 gen_186 gen_196;
gen_189: ',' gen_37 gen_38 gen_184 gen_186 gen_188;
gen_185: '.' gen_37 gen_38 gen_184;
gen_199: ',' gen_37 gen_38 gen_198;
gen_233: 'elif' test ':' suite gen_232;
gen_217: 'except' gen_211 ':' suite gen_216;
gen_223: ',' test gen_220 gen_222;
gen_231: stmt gen_230;
gen_61: ',' old_test gen_60;
gen_31: 'or' not_test gen_28 gen_30;
gen_29: 'and' not_test gen_28;
gen_164: comp_op factor gen_13 gen_15 gen_17 gen_20 gen_22 gen_24 gen_163;
gen_25: '|' factor gen_13 gen_15 gen_17 gen_20 gen_22 gen_24;
gen_23: '^' factor gen_13 gen_15 gen_17 gen_20 gen_22;
gen_21: '&' factor gen_13 gen_15 gen_17 gen_20;
gen_18: gen_19 factor gen_13 gen_15 gen_17;
gen_16: operatorAddSub factor gen_13 gen_15;
gen_14: operatorMulDivMod factor gen_13;
gen_138: trailer gen_137;
gen_159: ',' subscript gen_158;
gen_27: ',' factor gen_13 gen_15 gen_17 gen_20 gen_22 gen_24 gen_26;
gen_69: ',' test ':' test gen_68;
gen_142: argument ',' gen_141;
gen_150: ',' argument gen_149;
gen_39: gen_40 gen_38;
gen_77: HexDigit gen_76;
gen_85: '0' .. '7' gen_84;
gen_91: gen_89 gen_90;
gen_117: gen_115 gen_116;
gen_110: gen_111 gen_109;
gen_125: gen_126 gen_124;
gen_131: gen_132 gen_130;
gen_235: stat gen_234;
gen_308: 'elseif' exp 'then' gen_234 gen_271 gen_307;
gen_301: ',' gen_237 gen_275 gen_300;
gen_274: ',' exp gen_273;
gen_278: gen_279 args gen_277;
gen_276: gen_277 gen_297 gen_275;
gen_295: fieldsep field gen_294;
gen_248: gen_249 gen_247;
gen_259: gen_260 gen_258;
gen_266: . gen_265