gen_0: collection | chunk;
collection: '(' ';' gen_1 gen_22 gen_24 ')' gen_24;
property: gen_3 | gen_9 | TEXT | gen_10 | gen_13 | gen_14 | gen_15 | gen_17 | gen_18 | gen_19 | privateProp;
privateProp: 'A' .. 'Z' 'A' .. 'Z' gen_20 gen_16;
COLOR: 'W' | 'B';
TEXT: gen_5 '[' gen_6 ']';
chunk: gen_25 gen_80 EOF;
stat: ';' | gen_27 | functioncall | label | 'break' | NAME | gen_108 | gen_111 | gen_112 | gen_117 | functiondef | gen_120;
retstat: 'return' gen_81 fieldsep;
label: '::' gen_30 gen_31 '::';
explist: gen_82 exp_field gen_83;
exp_field: 'nil' | 'false' | 'true' | INT | HEX | gen_42 | gen_45 | ExponentPart | gen_46 | NORMALSTRING | CHARSTRING | LONGSTRING | '...' | functiondef | prefixexp | tableconstructor | gen_96 | gen_97 | gen_98 | gen_99 | gen_100 | gen_101 | gen_102 | gen_103 | gen_104 | gen_93 | gen_105;
prefixexp: varOrExp gen_87;
functioncall: varOrExp gen_74 args gen_87;
varOrExp: var | gen_32 | ϵ;
var: gen_28 gen_85;
args: gen_88 | tableconstructor | NORMALSTRING | CHARSTRING | LONGSTRING;
functiondef: gen_67 'function' gen_68 '(' gen_76 ')' gen_25 gen_80 'end';
tableconstructor: '{' gen_89 '}';
fieldlist: exp_field gen_90 fieldsep;
fieldsep: ',' | ';' | ϵ;
operatorComparison: '<' | '>' | '<=' | '>=' | '~=' | '==';
operatorAddSub: '+' | '-' | ϵ;
operatorMulDivMod: '*' | '/' | '%' | '//';
operatorBitwise: '&' | '|' | '~' | '<<' | '>>';
operatorUnary: 'not' | '#' | '-' | '~';
NAME: gen_29 gen_30 gen_31;
NORMALSTRING: '\"' gen_47 '\"';
CHARSTRING: '\'' gen_61 '\'';
LONGSTRING: '[' NESTED_STR ']';
NESTED_STR: gen_63 | gen_64;
INT: '0' .. '9' gen_33;
HEX: '0' gen_34 gen_35 HexDigit gen_36 gen_38 gen_40;
ExponentPart: gen_33 gen_44 operatorAddSub '0' .. '9' gen_33;
HexExponentPart: gen_41 operatorAddSub '0' .. '9' gen_33;
HexEscape: '\\' 'x' HexDigit HexDigit;
UtfEscape: '\\' 'u{' HexDigit gen_38 '}';
HexDigit: '0' .. '9' | 'a' .. 'f' | 'A' .. 'F';
gen_24: collection | ϵ;
gen_22: gen_23 | ϵ;
gen_1: gen_2 | ϵ;
gen_4: '[]' | TEXT;
gen_3: COLOR gen_4;
gen_9: 'KO' '[]';
gen_12: gen_10 | ϵ;
gen_10: gen_11 '[' gen_6 ']' gen_12;
gen_13: 'DO' '[]';
gen_14: 'IT' '[]';
gen_16: '[]' | gen_10;
gen_15: 'DD' gen_16;
gen_17: 'FG' gen_4;
gen_18: 'TB' gen_16;
gen_19: 'TW' gen_16;
gen_20: gen_21 | ϵ;
gen_8: '\\]' | .;
gen_6: gen_7 | ϵ;
gen_25: gen_26 | ϵ;
gen_80: retstat | ϵ;
gen_27: gen_28 gen_85 gen_106 '=' exp_field gen_83;
gen_108: gen_109 'do' gen_25 gen_80 'end';
gen_111: 'repeat' gen_25 gen_80 'until' exp_field;
gen_113: gen_114 | ϵ;
gen_116: 'else' gen_25 gen_80;
gen_115: gen_116 | ϵ;
gen_112: 'if' exp_field 'then' gen_25 gen_80 gen_113 gen_115 'end';
gen_84: ',' exp_field gen_83;
gen_83: ϵ | gen_84;
gen_117: 'for' gen_30 gen_31 gen_118 exp_field gen_83 'do' gen_25 gen_80 'end';
gen_81: explist | ϵ;
gen_120: 'local' gen_30 gen_31 gen_76 gen_81;
gen_73: '.' gen_30 gen_31 gen_72;
gen_72: ϵ | gen_73;
gen_75: ':' gen_30 gen_31;
gen_74: gen_75 | ϵ;
gen_106: gen_107 | ϵ;
gen_76: gen_77 | ϵ | '...';
gen_96: exp_field '^' exp_field;
gen_97: operatorUnary exp_field;
gen_98: exp_field operatorMulDivMod exp_field;
gen_99: exp_field operatorAddSub exp_field;
gen_100: exp_field '..' exp_field;
gen_101: exp_field operatorComparison exp_field;
gen_102: exp_field 'and' exp_field;
gen_103: exp_field 'or' exp_field;
gen_104: exp_field operatorBitwise exp_field;
gen_87: functioncall | ϵ;
gen_32: '(' exp_field ')' gen_85;
gen_28: NAME | gen_32;
gen_85: ϵ | gen_86;
gen_93: '[' exp_field ']' gen_94;
gen_92: gen_93 | gen_73;
gen_88: '(' gen_81 ')';
gen_79: ',' '...';
gen_77: fieldsep gen_30 gen_31 gen_76 gen_78;
gen_89: fieldlist | ϵ;
gen_90: gen_91 | ϵ;
gen_105: gen_30 gen_31 '=' exp_field;
gen_30: 'a' .. 'z' | 'A' .. 'Z' | '_' | '0' .. '9';
gen_31: NAME | ϵ;
gen_58: '\\' | '\"';
gen_57: ~gen_58;
gen_49: gen_50 | gen_52 | gen_54 | gen_55 | HexEscape | UtfEscape | gen_57 | gen_59;
gen_47: gen_48 | ϵ;
gen_60: '\'' | '\\';
gen_59: ~gen_60;
gen_61: gen_62 | ϵ;
gen_63: '=' NESTED_STR '=';
gen_65: gen_66 | ϵ;
gen_64: '[' gen_65 ']';
gen_33: ϵ | INT;
gen_34: 'x' | 'X';
gen_38: gen_39 | ϵ;
gen_43: ExponentPart | ϵ;
gen_42: '0' .. '9' gen_33 '.' gen_33 gen_43;
gen_45: '.' '0' .. '9' gen_33 gen_43;
gen_40: ϵ | HexExponentPart;
gen_46: '0' gen_34 HexDigit gen_38 gen_41 operatorAddSub '0' .. '9' gen_33;
gen_44: 'e' | 'E';
gen_41: 'p' | 'P';
gen_51: 'a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | 'z' | '\"' | '\'' | '\\';
gen_50: '\\' gen_51;
gen_53: '\r' | ϵ;
gen_52: '\\' gen_53 '\n';
gen_54: '\\' '0' .. '9';
gen_55: '\\' gen_56 '0' .. '9' '0' .. '9';
gen_23: ';' gen_1 gen_22;
gen_2: property gen_1;
gen_21: 'A' .. 'Z' gen_20;
gen_7: gen_8 gen_6;
gen_26: stat gen_25;
gen_114: 'elseif' exp_field 'then' gen_25 gen_80 gen_113;
gen_107: ',' gen_28 gen_85 gen_106;
gen_86: gen_87 gen_92 gen_85;
gen_91: fieldsep exp_field gen_90;
gen_48: gen_49 gen_47;
gen_62: gen_49 gen_61;
gen_66: . gen_65;
gen_39: HexDigit gen_38;
gen_71: gen_72 gen_74;
gen_70: gen_71 | ϵ;
gen_56: ϵ | '0' .. '2';
gen_82: ϵ | '=';
gen_29: ϵ | 'goto';
gen_11: ϵ | 'AB' | 'AE' | 'AW' | 'AR' | 'CR' | 'LB' | 'LN' | 'MA' | 'SL' | 'SQ' | 'TR' | 'VW';
gen_110: 'while' exp_field;
gen_109: ϵ | gen_110;
gen_95: '=' exp_field fieldsep;
gen_119: gen_76 'in';
gen_118: gen_95 | gen_119;
gen_67: ϵ | 'local';
gen_69: gen_30 gen_31 gen_70;
gen_68: ϵ | gen_69;
gen_35: ϵ | '.';
gen_37: gen_38 '.';
gen_36: ϵ | gen_37;
gen_5: ϵ | 'MN' | 'PL' | 'C' | 'DM' | 'GB' | 'GW' | 'HO' | 'N' | 'UC' | 'V' | 'BM' | 'TE' | 'AP' | 'CA' | 'FF' | 'GM' | 'ST' | 'SZ' | 'AN' | 'BR' | 'BT' | 'CP' | 'DT' | 'EV' | 'GN' | 'GC' | 'ON' | 'OT' | 'PB' | 'PC' | 'PW' | 'RE' | 'RO' | 'RU' | 'SO' | 'TM' | 'US' | 'WR' | 'WT' | 'BL' | 'OB' | 'OW' | 'WL' | 'PM' | 'AS' | 'IP' | 'IY' | 'SE' | 'SU' | 'HA' | 'KM';
gen_94: ϵ | gen_95;
gen_78: gen_79 | ϵ