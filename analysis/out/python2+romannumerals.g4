hundreds_tens_hun_part_hun_rep_tens_part_tens_rep_ones_ones_rep_not_test_fpdef_trailer_stmt_compound_stmt_suite_old_test_test_subscript_factor: 系 | NEWLINE | decorated_import_name_funcdef_classdef_simple_stmt_if_stmt_while_stmt_try_stmt_listmaker_testlist_comp_with_stmt_import_as_names_assert_stmt_arglist_or_test_list_if_comp_if_print_stmt_NAME_global_stmt_old_lambdef_lambdef_sliceop_expr_stmt_testlist_del_stmt_list_for_comp_for_for_stmt_exec_stmt_comparison_power_return_stmt_raise_stmt_import_from_yield_expr | 'M' | 'C' | 'CC' | 'CCC' | 'CD' | 'D' | 'CM' | 'X' | 'XX' | 'XXX' | 'XL' | 'L' | 'XC' | 'I' | 'II' | 'III' | 'IV' | 'V' | 'IX' | 'in' | ',' | '(' | 'assert' | gen_4 | gen_5 | '[' | 'l' | 'j' | 'J' | INDENT | 'pass' | 'break' | 'continue' | 'try' | 'else' | 'finally' | 'if' | 'or' | 'while' | 'elif' | 'with' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>>=' | '**=' | '//=' | ')' | ';' | gen_6 | '.' | 'import' | '>>' | '`' | '*' | 'as' | 'global' | '**' | 'def' | 'class' | '@' | '\n' | 'a' .. 'z' | 'A' .. 'Z' | '_' | '0' .. '9' | '=' | DEDENT | 'is' | 'from' | ']' | 'except' | 'raise' | 'not' | '{' | '}' | 'x' | '\'' | '\\' | '\r' | '\"' | '\"\"\"' | '\'\'\'' | ' ' | '\t' | 'u' | 'U' | 'b' | 'B';
decorated_import_name_funcdef_classdef_simple_stmt_if_stmt_while_stmt_try_stmt_listmaker_testlist_comp_with_stmt_import_as_names_assert_stmt_arglist_or_test_list_if_comp_if_print_stmt_NAME_global_stmt_old_lambdef_lambdef_sliceop_expr_stmt_testlist_del_stmt_list_for_comp_for_for_stmt_exec_stmt_comparison_power_return_stmt_raise_stmt_import_from_yield_expr: gen_0 gen_1;
gen_6: '.' '.' '.';
gen_0: 系 | decorated_import_name_funcdef_classdef_simple_stmt_if_stmt_while_stmt_try_stmt_listmaker_testlist_comp_with_stmt_import_as_names_assert_stmt_arglist_or_test_list_if_comp_if_print_stmt_NAME_global_stmt_old_lambdef_lambdef_sliceop_expr_stmt_testlist_del_stmt_list_for_comp_for_for_stmt_exec_stmt_comparison_power_return_stmt_raise_stmt_import_from_yield_expr | '\r' | . | 'r' | 'R' | 'o' | 'O' | 'e' | 'E' | '0' .. '9' | '0' .. '7' | '\\' | '\n' | '\'' | '\"' | '\"\"\"' | '\'\'\'' | ' ' | '\t' | 'from';
gen_4: ~gen_0;
gen_5: ~'\\';
gen_3: '0' | '1' | 'yield' | 系 | decorated_import_name_funcdef_classdef_simple_stmt_if_stmt_while_stmt_try_stmt_listmaker_testlist_comp_with_stmt_import_as_names_assert_stmt_arglist_or_test_list_if_comp_if_print_stmt_NAME_global_stmt_old_lambdef_lambdef_sliceop_expr_stmt_testlist_del_stmt_list_for_comp_for_for_stmt_exec_stmt_comparison_power_return_stmt_raise_stmt_import_from_yield_expr | 'import';
gen_2: hundreds_tens_hun_part_hun_rep_tens_part_tens_rep_ones_ones_rep_not_test_fpdef_trailer_stmt_compound_stmt_suite_old_test_test_subscript_factor gen_3;
gen_1: decorated_import_name_funcdef_classdef_simple_stmt_if_stmt_while_stmt_try_stmt_listmaker_testlist_comp_with_stmt_import_as_names_assert_stmt_arglist_or_test_list_if_comp_if_print_stmt_NAME_global_stmt_old_lambdef_lambdef_sliceop_expr_stmt_testlist_del_stmt_list_for_comp_for_for_stmt_exec_stmt_comparison_power_return_stmt_raise_stmt_import_from_yield_expr | 系 | '+' | '-' | '~' | '*' | '/' | '%' | '//' | 'del' | ',' | 'for' | '**' | 'exec' | 'as' | '|' | '<' | '>' | '==' | '>=' | '<=' | '<>' | '!=' | 'in' | 'is' | '^' | '&' | '<<' | '>>' | gen_2 | ':' | 'and' | '0' .. '9' | '=' | 'return' | 'lambda' | 'a' .. 'f' | 'A' .. 'F'